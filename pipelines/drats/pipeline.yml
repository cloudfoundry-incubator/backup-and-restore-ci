---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: latest

- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: latest

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v7.*

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: master
    tag_filter: v3.*

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: disaster-recovery-acceptance-tests-prs
  type: pull-request
  source:
    repo: cloudfoundry-incubator/disaster-recovery-acceptance-tests
    access_token: ((github-access-token))
    branch: master

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git
    branch: master
    ignore_paths:
    - ci/pipeline.yml

- name: backup-and-restore-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/backup-and-restore-ci.git
    branch: master

jobs:

### DEPLOY CF

- name: deploy-cf-pr-opt-components
  serial: true
  serial_groups: [drats-pr]
  plan:
  - aggregate:
    - get: disaster-recovery-acceptance-tests-prs
      trigger: true
      version: every
    - get: cf-deployment
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: cf-deployment-concourse-tasks
    - get: backup-and-restore-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      ops-files: cf-deployment
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      SYSTEM_DOMAIN: drats-pr-ragdoll.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/workaround/use-3-azs-for-router.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/enable-nfs-volume-service.yml operations/backup-and-restore/enable-backup-restore-nfs-broker.yml operations/experimental/secure-service-credentials.yml  operations/experimental/disable-interpolate-service-bindings.yml operations/backup-and-restore/enable-backup-restore-credhub.yml operations/experimental/enable-traffic-to-internal-networks.yml"
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
  - task: bosh-run-errand-nfsbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
  - task: wait-for-cf-api
    file: backup-and-restore-ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.drats-pr-ragdoll.cf-app.com

- name: deploy-cf-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - aggregate:
    - get: disaster-recovery-acceptance-tests
      trigger: true
    - get: cf-deployment
      trigger: true
    - get: bbr-binary-release
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment
    params:
      BBL_STATE_DIR: drats-papillon/
  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment
      ops-files: cf-deployment
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-papillon/
      SYSTEM_DOMAIN: drats-papillon.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/workaround/use-3-azs-for-router.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/enable-nfs-volume-service.yml operations/backup-and-restore/enable-backup-restore-nfs-broker.yml operations/experimental/secure-service-credentials.yml  operations/experimental/disable-interpolate-service-bindings.yml operations/backup-and-restore/enable-backup-restore-credhub.yml operations/experimental/enable-traffic-to-internal-networks.yml"
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
  - task: bosh-run-errand-nfsbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-papillon/
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-papillon/
  - task: wait-for-cf-api
    file: backup-and-restore-ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.drats-papillon.cf-app.com


- name: deploy-cf
  serial: true
  serial_groups: [drats]
  plan:
  - aggregate:
    - get: disaster-recovery-acceptance-tests
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
      trigger: true
    - get: bbr-binary-release
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment
    params:
      BBL_STATE_DIR: drats-with-config-manx/
  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment
      ops-files: cf-deployment
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-with-config-manx/
      SYSTEM_DOMAIN: drats-with-config-manx.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/workaround/use-3-azs-for-router.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/enable-nfs-volume-service.yml operations/backup-and-restore/enable-backup-restore-nfs-broker.yml operations/experimental/secure-service-credentials.yml  operations/experimental/disable-interpolate-service-bindings.yml operations/backup-and-restore/enable-backup-restore-credhub.yml operations/experimental/enable-traffic-to-internal-networks.yml"
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
  - task: bosh-run-errand-nfsbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-with-config-manx/
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-with-config-manx/
  - task: wait-for-cf-api
    file: backup-and-restore-ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.drats-with-config-manx.cf-app.com

### RUN TESTS

- name: run-drats-prs-opt-components
  serial: true
  serial_groups: [drats-pr]
  plan:
  - aggregate:
    - get: cf-deployment
      passed: [deploy-cf-pr-opt-components]
      trigger: true
    - get: disaster-recovery-acceptance-tests-prs
      trigger: true
      passed: [deploy-cf-pr-opt-components]
      version: every
    - get: bbr-binary-release
    - get: bosh-backup-and-restore-meta
  - put: disaster-recovery-acceptance-tests-prs
    params:
      path: disaster-recovery-acceptance-tests-prs
      status: pending
      context: drats
  - task: unit-tests
    file: disaster-recovery-acceptance-tests-prs/ci/unit-tests/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
    params:
      GITHUB_SSH_KEY: ((github-ssh-key))
    on_failure:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: failure
        context: drats
  - task: create-integration-config
    file: disaster-recovery-acceptance-tests-prs/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
      integration-configs: bosh-backup-and-restore-meta
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      SYSTEM_DOMAIN: drats-pr-ragdoll.cf-app.com
      INTEGRATION_CONFIG_FILE_PATH: drats-pr-ragdoll/integration_config.json
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests-prs/ci/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: drats-pr-ragdoll/integration_config.json
    on_failure:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: failure
        context: drats
    on_success:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: success
        context: drats

- name: run-drats
  serial: true
  serial_groups: [drats]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
    - get: cf-deployment
      passed: [deploy-cf]
      trigger: true
    - get: disaster-recovery-acceptance-tests
      trigger: true
      passed: [deploy-cf]
    - get: bbr-binary-release
      trigger: true
      passed: [deploy-cf]
  - task: unit-tests
    file: disaster-recovery-acceptance-tests/ci/unit-tests/task.yml
    params:
      GITHUB_SSH_KEY: ((github-ssh-key))
  - task: create-integration-config
    file: disaster-recovery-acceptance-tests/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      integration-configs: bosh-backup-and-restore-meta
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-with-config-manx/
      SYSTEM_DOMAIN: drats-with-config-manx.cf-app.com
      INTEGRATION_CONFIG_FILE_PATH: drats-with-config-manx/integration_config.json
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: drats-with-config-manx/integration_config.json

- name: run-drats-with-destroy
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - aggregate:
    - get: cf-deployment
      passed: [deploy-cf-drats-papillon]
      trigger: true
    - get: disaster-recovery-acceptance-tests
      trigger: true
      passed: [deploy-cf-drats-papillon]
    - get: bbr-binary-release
      trigger: true
      passed: [deploy-cf-drats-papillon]
    - get: bosh-backup-and-restore-meta
  - task: unit-tests
    file: disaster-recovery-acceptance-tests/ci/unit-tests/task.yml
    params:
      GITHUB_SSH_KEY: ((github-ssh-key))
  - task: create-integration-config
    file: disaster-recovery-acceptance-tests/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      integration-configs: bosh-backup-and-restore-meta
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-papillon
      SYSTEM_DOMAIN: drats-papillon.cf-app.com
      INTEGRATION_CONFIG_FILE_PATH: drats-papillon/integration_config.json
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: drats-papillon/integration_config.json

## Delete cf deployments
- name: delete-cf-pr
  serial: true
  serial_groups: [drats-pr]
  plan:
  - aggregate:
    - get: cf-deployment
      passed: [run-drats-prs-opt-components]
      trigger: true
    - get: disaster-recovery-acceptance-tests-prs
      trigger: true
      passed: [run-drats-prs-opt-components]
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/

- name: delete-cf-deployment-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - aggregate:
    - get: cf-deployment
      passed: [run-drats-with-destroy]
      trigger: true
    - get: disaster-recovery-acceptance-tests
      passed: [run-drats-with-destroy]
      trigger: true
    - get: bbr-binary-release
      passed: [run-drats-with-destroy]
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-papillon/

- name: delete-cf
  serial: true
  serial_groups: [drats]
  plan:
  - aggregate:
    - get: cf-deployment
      passed: [run-drats]
      trigger: true
    - get: disaster-recovery-acceptance-tests
      trigger: true
      passed: [run-drats]
    - get: bbr-binary-release
      trigger: true
      passed: [run-drats]
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-with-config-manx/

