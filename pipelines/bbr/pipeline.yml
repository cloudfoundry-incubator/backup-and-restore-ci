---
maru-bosh-env: &maru-bosh-env
  BOSH_ENVIRONMENT: "((maru-bosh-director-url))"
  BOSH_CLIENT: "((maru-bosh-director-username))"
  BOSH_CLIENT_SECRET: "((maru-bosh-director-password))"
  BOSH_CA_CERT: "((maru-bosh-director-ca-cert))"
  BOSH_GW_HOST: "((maru-jumpbox-url)):22"
  BOSH_GW_USER: jumpbox
  BOSH_GW_PRIVATE_KEY: "((maru-jumpbox-ssh-key))"
  USE_BOSH_ALL_PROXY: true

maru-bosh-deployment-creds: &maru-bosh-deployment-creds
  target: "((maru-bosh-director-url))"
  client: "((maru-bosh-director-username))"
  client_secret: "((maru-bosh-director-password))"
  ca_cert: "((maru-bosh-director-ca-cert))"
  jumpbox_url: "((maru-jumpbox-url)):22"
  jumpbox_ssh_key: "((maru-jumpbox-ssh-key))"

maru-lite-bosh-deployment-creds: &maru-lite-bosh-deployment-creds
  target: "((maru-lite-bosh-director-url))"
  client: "((maru-lite-bosh-director-username))"
  client_secret: "((maru-lite-bosh-director-password))"
  ca_cert: "((maru-lite-bosh-director-ca-cert))"
  jumpbox_url: "((maru-lite-jumpbox-address)):22"
  jumpbox_ssh_key: "((maru-lite-jumpbox-ssh-key))"

maru-lite-bosh-env: &maru-lite-bosh-env
  BOSH_ENVIRONMENT: "((maru-lite-bosh-director-url))"
  BOSH_CLIENT: "((maru-lite-bosh-director-username))"
  BOSH_CLIENT_SECRET: "((maru-lite-bosh-director-password))"
  BOSH_CA_CERT: "((maru-lite-bosh-director-ca-cert))"
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: "((maru-lite-jumpbox-address)):22"
  BOSH_GW_PRIVATE_KEY: "((maru-lite-jumpbox-ssh-key))"
  USE_BOSH_ALL_PROXY: true

maru-lite-bosh-team-creds: &maru-lite-bosh-team-creds
  BOSH_ENVIRONMENT: "((maru-lite-bosh-director-url))"
  BOSH_CLIENT: "((bosh-team-admin))"
  BOSH_CLIENT_SECRET: "((bosh-team-admin-secret))"
  BOSH_CA_CERT: "((maru-lite-bosh-director-ca-cert))"
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: "((maru-lite-jumpbox-address)):22"
  BOSH_GW_PRIVATE_KEY: "((maru-lite-jumpbox-ssh-key))"

lite-bosh-uaa-env: &lite-bosh-uaa-env
  BOSH_ENVIRONMENT: lite-bosh-uaa.backup-and-restore.cf-app.com
  BOSH_CLIENT: ((uaa-director-username))
  BOSH_CLIENT_SECRET: ((uaa-director-password))
  BOSH_GW_HOST: lite-bosh-uaa.backup-and-restore.cf-app.com
  BOSH_GW_USER: jumpbox
  BOSH_GW_PRIVATE_KEY: bosh-backup-and-restore-meta/garden-bosh-uaa/bosh.pem
  BOSH_CA_CERT_PATH: bosh-backup-and-restore-meta/certs/lite-bosh-uaa.backup-and-restore.cf-app.com.crt
  BOSH_CA_CERT: ((uaa-director-ca-cert))

test-bosh-director-ip: &test-bosh-director-ip 10.0.16.190

groups:
- name: BUILD
  jobs:
  - upload-deployment-test-releases
  - unit
  - deploy-system-deployment-bosh-all-proxy
  - deploy-system-all-deployments
  - deploy-system-windows
  - deploy-system-director
  - system-deployment
  - system-bosh-all-proxy
  - system-director
  - system-windows
  - system-all-deployments
  - delete-system-deployment-bosh-all-proxy
  - delete-system-windows
  - delete-system-all-deployments
  - build-rc
  - install-optional-components-on-pas
  - run-p-drats-on-pas

- name: SHIPIT
  jobs:
  - build-and-publish-final

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: bosh-deployment-resource
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: bbr-director-test-releases
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore-test-releases.git
    private_key: ((git-private-key))
    branch: master
    paths:
    - test-bosh-backup-and-restore-release

- name: bbr-deployment-test-releases
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore-test-releases.git
    private_key: ((git-private-key))
    branch: master
    paths:
    - redis-test-release
    - lock-ordering-release
    - many-bbr-jobs-release

- name: bosh-backup-and-restore
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore.git
    private_key: ((git-private-key))
    branch: master
    disable_git_lfs: true
    ignore_paths:
    - ci

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: release-trigger
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master
    paths:
    - bbr-current-release/version

- name: backup-and-restore-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: ((git-private-key))
    branch: master

- name: bbr-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: p-bosh-backup-and-restore
    access_key_id: ((pivnet-aws-access-key-id))
    secret_access_key: ((pivnet-aws-secret-access-key))

- name: homebrew-tap
  type: git
  source:
    uri: git@github.com:cloudfoundry/homebrew-tap.git
    branch: master
    private_key: ((homebrew-git-private-key))

- name: rc
  type: s3
  source:
    bucket: bosh-backup-and-restore-builds
    region_name: eu-west-1
    regexp: bbr-(.*)\.tar
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: version
  type: semver
  source:
    bucket: bosh-backup-and-restore-builds
    region_name: eu-west-1
    key: current-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: bbr-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))
    drafts: true

- name: pivotal-disaster-recovery-acceptance-tests
  type: git
  source:
    uri: git@github.com:pivotal-cf/pivotal-disaster-recovery-acceptance-tests.git
    private_key: ((git-private-key))
    branch: master

- name: windows-vm-deployment
  type: bosh-deployment-resource
  source:
    deployment: redis-windows-ci
    <<: *maru-bosh-deployment-creds

- name: many-bbr-scripts-deployment
  type: bosh-deployment-resource
  source:
    deployment: many-bbr-scripts
    <<: *maru-bosh-deployment-creds

- name: jumpbox-windows-deployment
  type: bosh-deployment-resource
  source:
    deployment: jumpbox-windows-ci
    <<: *maru-bosh-deployment-creds

- name: all-deployments-redis-1-deployment
  type: bosh-deployment-resource
  source:
    deployment: redis-1
    <<: *maru-lite-bosh-deployment-creds

- name: all-deployments-redis-2-deployment
  type: bosh-deployment-resource
  source:
    deployment: redis-2
    <<: *maru-lite-bosh-deployment-creds

- name: all-deployments-redis-3-deployment
  type: bosh-deployment-resource
  source:
    deployment: redis-3
    <<: *maru-lite-bosh-deployment-creds

- name: windows-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2016-go_agent

- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: bosh-director-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh

- name: test-bosh-director-deployment
  type: bosh-deployment-resource
  source:
    deployment: test-bosh-director
    <<: *maru-bosh-deployment-creds

jobs:
- name: deploy-system-director
  serial: true
  serial_groups: [bosh-directors]
  plan:
  - aggregate:
    - get: bosh-director-release
      trigger: true
      params:
        tarball: false
    - get: bosh-deployment
    - get: bosh-backup-and-restore-meta
    - get: bbr-director-test-releases
      trigger: true
    - get: xenial-stemcell
  - put: test-bosh-director-deployment
    params:
      manifest: bosh-deployment/bosh.yml
      stemcells:
      - xenial-stemcell/*.tgz
      ops_files:
      - bosh-deployment/gcp/cpi.yml
      - bosh-deployment/jumpbox-user.yml
      - bosh-deployment/bbr.yml
      - bosh-backup-and-restore-meta/test-bosh-director/deployment-name-ops.yml
      - bosh-backup-and-restore-meta/test-bosh-director/use-cloud-config-ops.yml
      - bosh-backup-and-restore-meta/test-bosh-director/add-test-releases.yml
      vars:
        director_name: test-bosh-director
        internal_ip: *test-bosh-director-ip
        project_id: cf-backup-and-restore
        gcp_credentials_json: ((gcp_service_account_key))
        test_release_path: /tmp/build/put/bbr-director-test-releases/test-bosh-backup-and-restore-release

- name: upload-deployment-test-releases
  serial: true
  plan:
  - aggregate:
    - get: bbr-deployment-test-releases
      trigger: true
    - get: backup-and-restore-ci
    - get: bosh-backup-and-restore-meta
  - aggregate:
    - task: upload-redis-test-release-maru-lite
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *maru-lite-bosh-env
    - task: upload-many-bbr-jobs-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        <<: *lite-bosh-uaa-env
    - task: upload-many-bbr-jobs-release-maru
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        <<: *maru-bosh-env
    - task: upload-redis-test-release-maru-bosh
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *maru-bosh-env
    - task: upload-redis-test-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *lite-bosh-uaa-env
    - task: upload-lock-ordering-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: lock-ordering-release
        <<: *lite-bosh-uaa-env

- name: unit
  serial: true
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      trigger: true
      params:
        submodules: none
        disable_git_lfs: true
    - get: backup-and-restore-ci
  - task: unit
    file: backup-and-restore-ci/tasks/bbr-unit/task.yml
    privileged: true
    params:
      DOCKER_HOST: "tcp://10.0.3.12:4243"
      GITHUB_SSH_KEY: "((github-ssh-key))"

- name: deploy-system-deployment-bosh-all-proxy
  serial: true
  serial_groups: [system-bosh-all-proxy]
  plan:
  - aggregate:
    - get: xenial-stemcell
    - get: bosh-backup-and-restore
      passed: [unit]
      trigger: true
    - get: bbr-deployment-test-releases
      passed: [upload-deployment-test-releases]
      trigger: true
  - put: many-bbr-scripts-deployment
    params:
      manifest: bosh-backup-and-restore/fixtures/many-bbr-scripts.yml
      stemcells:
        - xenial-stemcell/*.tgz

- name: deploy-system-all-deployments
  serial: true
  serial_groups: [system-all-deployments]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [unit]
      trigger: true
    - get: bbr-deployment-test-releases
      passed: [upload-deployment-test-releases]
      trigger: true
    - get: backup-and-restore-ci
  - task: create-bosh-team-admin-maru-lite
    file: backup-and-restore-ci/tasks/bbr-create-bosh-team-admin/task.yml
    privileged: true
    params:
      BOSH_ENVIRONMENT: 10.0.0.6
      UAA_CLIENT: ((maru-lite-uaa-admin-client))
      UAA_CLIENT_SECRET: ((maru-lite-uaa-admin-client-secret))
      BOSH_TEAM_CLIENT: ((bosh-team-admin))
      BOSH_TEAM_CLIENT_SECRET: ((bosh-team-admin-secret))
      JUMPBOX_HOST: ((maru-lite-jumpbox-address))
      JUMPBOX_USER: jumpbox
      JUMPBOX_PRIVATE_KEY: ((maru-lite-jumpbox-ssh-key))
  - aggregate:
    - task: deploy-bosh-team-redis-1
      file: backup-and-restore-ci/tasks/bbr-deploy-bosh-team/task.yml
      params:
        <<: *maru-lite-bosh-team-creds
        DEPLOYMENT_NAME: redis-1
    - task: deploy-bosh-team-redis-2
      file: backup-and-restore-ci/tasks/bbr-deploy-bosh-team/task.yml
      params:
        <<: *maru-lite-bosh-team-creds
        DEPLOYMENT_NAME: redis-2
    - task: deploy-bosh-team-redis-3
      file: backup-and-restore-ci/tasks/bbr-deploy-bosh-team/task.yml
      params:
        <<: *maru-lite-bosh-team-creds
        DEPLOYMENT_NAME: redis-3

- name: deploy-system-windows
  serial: true
  serial_groups: [system-windows]
  plan:
  - aggregate:
    - get: windows-stemcell
    - get: xenial-stemcell
    - get: bosh-backup-and-restore
      passed: [unit]
      trigger: true
    - get: bbr-deployment-test-releases
      passed: [upload-deployment-test-releases]
      trigger: true
  - aggregate:
    - put: windows-vm-deployment
      params:
        manifest: bosh-backup-and-restore/fixtures/redis-windows-ci.yml
        stemcells:
        - windows-stemcell/*.tgz
        - xenial-stemcell/*.tgz
    - put: jumpbox-windows-deployment
      params:
        manifest: bosh-backup-and-restore/fixtures/jumpbox-windows-ci.yml
        stemcells:
        - xenial-stemcell/*.tgz

- name: system-deployment
  serial: true
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [unit]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bbr-deployment-test-releases
      passed: [upload-deployment-test-releases]
      trigger: true
  - task: system-deployment-with-uaa
    file: backup-and-restore-ci/tasks/bbr-system-deployment/task.yml
    params:
      <<: *lite-bosh-uaa-env

- name: system-bosh-all-proxy
  serial: true
  serial_groups: [system-bosh-all-proxy]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [deploy-system-deployment-bosh-all-proxy]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bbr-deployment-test-releases
      passed: [deploy-system-deployment-bosh-all-proxy]
      trigger: true
  - task: system-bosh-all-proxy
    file: backup-and-restore-ci/tasks/bbr-system-bosh-all-proxy/task.yml
    params:
      <<: *maru-bosh-env
      DIRECTOR_SSH_KEY: ((maru-director-ssh-key))
      DIRECTOR_ADDRESS: 10.0.0.6

- name: system-director
  serial: true
  serial_groups: [bosh-directors]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [unit]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bosh-director-release
      passed: [deploy-system-director]
      trigger: true
    - get: bbr-director-test-releases
      passed: [deploy-system-director]
      trigger: true
  - task: system-director
    file: backup-and-restore-ci/tasks/bbr-system-director/task.yml
    params:
      JUMPBOX_HOST: "((maru-jumpbox-url)):22"
      JUMPBOX_USER: jumpbox
      JUMPBOX_SSH_KEY: "((maru-jumpbox-ssh-key))"
      CREDHUB_SERVER: "((maru-credhub-server))"
      CREDHUB_CLIENT: "((maru-credhub-client))"
      CREDHUB_SECRET: "((maru-credhub-secret))"
      CREDHUB_PROXY: "((maru-credhub-proxy))"
      CREDHUB_CA_CERT: "((maru-credhub-ca_cert))"
      DIRECTOR_HOST: *test-bosh-director-ip
      DIRECTOR_SSH_USERNAME: jumpbox

- name: system-windows
  serial: true
  serial_groups: [system-windows]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [deploy-system-windows]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bbr-deployment-test-releases
      passed: [deploy-system-windows]
      trigger: true
  - task: system-windows
    file: backup-and-restore-ci/tasks/bbr-system-windows/task.yml
    params:
      <<: *maru-bosh-env

- name: system-all-deployments
  serial: true
  serial_groups: [system-all-deployments]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [deploy-system-all-deployments]
      trigger: true
    - get: backup-and-restore-ci
    - get: bosh-backup-and-restore-meta
  - task: system-all-deployments
    file: backup-and-restore-ci/tasks/bbr-system-all-deployments/task.yml
    params:
      <<: *maru-lite-bosh-team-creds

- name: delete-system-all-deployments
  serial: true
  serial_groups: [system-all-deployments]
  plan:
  - get: bosh-backup-and-restore
    passed: [system-all-deployments]
    trigger: true
  - aggregate:
    - put: all-deployments-redis-1-deployment
      params:
        delete:
          enabled: true
    - put: all-deployments-redis-2-deployment
      params:
        delete:
          enabled: true
    - put: all-deployments-redis-3-deployment
      params:
        delete:
          enabled: true

- name: delete-system-deployment-bosh-all-proxy
  serial: true
  serial_groups: [system-bosh-all-proxy]
  plan:
  - get: bosh-backup-and-restore
    passed: [system-bosh-all-proxy]
    trigger: true
  - put: many-bbr-scripts-deployment
    params:
      delete:
        enabled: true

- name: delete-system-windows
  serial: true
  serial_groups: [system-windows]
  plan:
  - get: bosh-backup-and-restore
    passed: [system-windows]
    trigger: true
  - aggregate:
    - put: windows-vm-deployment
      params:
        delete:
          enabled: true
    - put: jumpbox-windows-deployment
      params:
        delete:
          enabled: true

- name: build-rc
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore
      passed: [system-all-deployments, system-deployment, system-bosh-all-proxy, system-director, system-windows]
      trigger: true
      params:
        submodules: none
        disable_git_lfs: true
    - get: version
      params: {pre: rc}
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: build
    file: backup-and-restore-ci/tasks/bbr-build/task.yml
  - put: rc
    params: {file: bbr-build/bbr-*}
  - put: version
    params: {file: version/number}

- name: install-optional-components-on-pas
  serial: true
  serial_groups: [p-drats]
  plan:
  - get: pivotal-disaster-recovery-acceptance-tests
  - task: enable-internal-blobstore
    file: pivotal-disaster-recovery-acceptance-tests/ci/enable-internal-blobstore-pas/task.yml
    params:
      OPS_MAN_URL: ((ops-man-url))
      OPS_MAN_USER: ((ops-man-user))
      OPS_MAN_PASS: ((ops-man-pass))
  - task: configure-diego-cells
    file: pivotal-disaster-recovery-acceptance-tests/ci/configure-diego-cells-pas/task.yml
    params:
      OPS_MAN_URL: ((ops-man-url))
      OPS_MAN_USER: ((ops-man-user))
      OPS_MAN_PASS: ((ops-man-pass))
  - task: enable-optional-components
    file: pivotal-disaster-recovery-acceptance-tests/ci/enable-optional-components-pas/task.yml
    privileged: true
    params:
      OPS_MAN_URL: ((ops-man-url))
      OPS_MAN_USER: ((ops-man-user))
      OPS_MAN_PASS: ((ops-man-pass))
      OPS_MAN_VERSION: "2.3"

- name: run-p-drats-on-pas
  serial: true
  serial_groups: [p-drats]
  plan:
  - aggregate:
    - get: pivotal-disaster-recovery-acceptance-tests
    - get: bosh-backup-and-restore
      passed: [build-rc]
    - get: rc
      passed: [build-rc]
      trigger: true
  - task: acceptance-tests
    privileged: true
    file: pivotal-disaster-recovery-acceptance-tests/ci/p-drats-ops-manager/task.yml
    input_mapping:
      bbr-binary-release: rc
    params:
      DEFAULT_TIMEOUT_MINS: 30
      OPS_MAN_URL: ((ops-man-url))
      OPS_MAN_USER: ((ops-man-user))
      OPS_MAN_PASS: ((ops-man-pass))
      OPS_MAN_SSH_KEY: ((ops-man-ssh-key))
      SKIP_SUITE_NAME: cf-smbbroker

- name: build-and-publish-final
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
      resource: release-trigger
      trigger: true
    - get: bosh-backup-and-restore
      passed: [run-p-drats-on-pas]
      params:
        submodules: none
        disable_git_lfs: true
    - get: backup-and-restore-ci
    - get: homebrew-tap
  - task: get-version
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: cloudfoundrylondon/backup-and-restore}
      inputs:
      - name: bosh-backup-and-restore-meta
      outputs:
      - name: bbr-version
      run:
        path: /bin/bash
        args:
        - -c
        - |-
          set -eux
          cat bosh-backup-and-restore-meta/bbr-current-release/version > bbr-version/number
  - task: build
    file: backup-and-restore-ci/tasks/bbr-build/task.yml
    input_mapping:
      version: bbr-version
  - aggregate:
    - task: generate-bbr-release-metadata
      file: backup-and-restore-ci/tasks/generate-bbr-release-metadata/task.yml
      input_mapping:
        version-folder: bosh-backup-and-restore-meta
        template-folder: bosh-backup-and-restore-meta
        release: bbr-build
      params:
        TEMPLATE_PATH: templates/release.yml.erb
        VERSION_PATH: bbr-current-release/version
    - task: generate-release-notes
      file: backup-and-restore-ci/tasks/generate-release-notes/task.yml
      input_mapping:
        repo: bosh-backup-and-restore
        template-folder: bosh-backup-and-restore-meta
      params:
        TEMPLATE_PATH: templates/release-notes.md.erb
  - put: bbr-pivnet
    params:
      metadata_file: pivnet-release-with-metadata/release.yml
      s3_filepath_prefix: product-files/bosh-backup-restore
      file_glob: pivnet-release-with-metadata/bbr*
  - put: bbr-release
    params:
      name: bosh-backup-and-restore-meta/bbr-current-release/version
      tag: bosh-backup-and-restore-meta/bbr-current-release/version
      tag_prefix: v
      body: release-notes/release-notes.md
      commitish: bosh-backup-and-restore/.git/refs/heads/master
      globs:
      - github-release-with-metadata/bbr*
  - task: update-homebrew-formula
    file: backup-and-restore-ci/tasks/bbr-update-homebrew-formula/task.yml
  - put: homebrew-tap
    params:
      repository: updated-homebrew-tap
      rebase: true
