---
maru-bosh-env: &maru-bosh-env
  BOSH_ENVIRONMENT: "((maru-bosh-director-url))"
  BOSH_CLIENT: "((maru-bosh-director-username))"
  BOSH_CLIENT_SECRET: "((maru-bosh-director-password))"
  BOSH_CA_CERT: "((maru-bosh-director-ca-cert))"
  BOSH_GW_HOST: "((maru-jumpbox-url)):22"
  BOSH_GW_USER: jumpbox
  BOSH_GW_PRIVATE_KEY: "((maru-jumpbox-ssh-key))"

maru-lite-bosh-env: &maru-lite-bosh-env
  BOSH_ENVIRONMENT: "((maru-lite-bosh-director-url))"
  BOSH_CLIENT: "((maru-lite-bosh-director-username))"
  BOSH_CLIENT_SECRET: "((maru-lite-bosh-director-password))"
  BOSH_CA_CERT: "((maru-lite-bosh-director-ca-cert))"
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: "((maru-lite-jumpbox-address)):22"
  BOSH_GW_PRIVATE_KEY: "((maru-lite-jumpbox-ssh-key))"

maru-lite-bosh-team-creds: &maru-lite-bosh-team-creds
  BOSH_ENVIRONMENT: "((maru-lite-bosh-director-url))"
  BOSH_CLIENT: "((bosh-team-admin))"
  BOSH_CLIENT_SECRET: "((bosh-team-admin-secret))"
  BOSH_CA_CERT: "((maru-lite-bosh-director-ca-cert))"
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: "((maru-lite-jumpbox-address)):22"
  BOSH_GW_PRIVATE_KEY: "((maru-lite-jumpbox-ssh-key))"

test-bosh-director-ip: &test-bosh-director-ip 10.0.255.5
test-bosh-director-deployment: &test-bosh-director-deployment test-bosh-director

toolsmiths_api_worker: &toolsmiths_api_worker vsphere-mapbu-cryogenics

groups:
- name: all
  jobs:
  - upload-deployment-test-releases
  - unit-integration
  - deploy-fake-director
  - system-test-deployment
  - system-test-director
  - delete-system-director
  - build-rc
  - build-and-publish-final
  - update-homebrew-formula
  - test-build-s3-config-validator
  - claim-env-pas-2-10
  - configure-aws-s3-filestore
  - validate-aws-s3-config
  - unclaim-env-pas-2-10

- name: build
  jobs:
  - upload-deployment-test-releases
  - unit-integration
  - deploy-fake-director
  - system-test-deployment
  - system-test-director
  - delete-system-director
  - build-rc

- name: s3-validator
  jobs:
  - test-build-s3-config-validator
  - claim-env-pas-2-10
  - configure-aws-s3-filestore
  - validate-aws-s3-config
  - unclaim-env-pas-2-10

- name: shipit
  jobs:
  - build-and-publish-final
  - update-homebrew-formula

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: bosh-deployment-resource
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: pcf-pool
  type: registry-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource
    tag: latest

resources:
- name: bbr-director-test-releases
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore-test-releases.git
    private_key: ((git-private-key))
    branch: master
    paths:
    - test-bosh-backup-and-restore-release

- name: bbr-deployment-test-releases
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore-test-releases.git
    private_key: ((git-private-key))
    branch: master
    paths:
    - redis-test-release
    - lock-ordering-release
    - many-bbr-jobs-release

- name: bosh-backup-and-restore
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore.git
    private_key: ((git-private-key))
    branch: master
    disable_git_lfs: true
    ignore_paths:
    - ci

- name: bbr-s3-config-validator
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-backup-and-restore
    private_key: ((git-private-key))
    branch: master
    paths:
      - s3-config-validator

- name: bosh-backup-and-restore-meta
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: backup-and-restore-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: ((git-private-key))
    branch: master

- name: release-trigger
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master
    paths:
    - bbr-current-release/version

- name: homebrew-tap
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/homebrew-tap.git
    branch: master
    private_key: ((homebrew-git-private-key))

- name: bbr-pivnet
  type: pivnet
  icon: alpha-p-box
  source:
    api_token: ((pivnet-api-token))
    product_slug: p-bosh-backup-and-restore
    access_key_id: ((pivnet-aws-access-key-id))
    secret_access_key: ((pivnet-aws-secret-access-key))

- name: rc
  type: s3
  icon: aws
  source:
    bucket: bosh-backup-and-restore-builds
    region_name: eu-west-1
    regexp: bbr-(.*)\.tar
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: bbr-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))
    drafts: true

- name: bbr-final-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))

- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

- name: bosh-deployment
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: test-bosh-director-deployment
  type: bosh-deployment-resource
  source:
    deployment: *test-bosh-director-deployment
    skip_check: true

- name: six-hours
  type: time
  icon: timer-outline
  source:
    interval: 6h
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: s3-config-validator-version
  type: semver
  icon: google
  source:
    bucket: cryo-bbr-s3-config-validator-test-artifacts
    key: version
    json_key: ((gcp-bbr-bucket-owner))
    initial_version: 0.0.1
    driver: gcs

- name: bbr-s3-config-validator-test-artifacts
  type: gcs
  source:
    bucket: cryo-bbr-s3-config-validator-test-artifacts
    json_key: ((gcp-bbr-bucket-owner))
    regexp: .*.tgz

- name: bbr-s3-config-validator-artifact
  type: gcs
  source:
    bucket: cryo-bbr-s3-config-validator-test-artifacts
    json_key: ((gcp-bbr-bucket-owner))
    regexp: bbr-s3-config-validator.(.*).tgz

- name: pcf-2-10-pool
  type: pcf-pool
  source:
    api_token: ((toolsmiths-api-token))
    pool_name: us_2_10
  tags:
    - *toolsmiths_api_worker

jobs:
- name: unit-integration
  serial: true
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
    - get: bosh-backup-and-restore
      trigger: true
      params:
        submodules: none
        disable_git_lfs: true
    - get: backup-and-restore-ci
  - task: test
    file: backup-and-restore-ci/tasks/bbr-unit/task.yml
    params:
      DOCKER_HOST_IP: "10.10.0.12"
      DOCKER_HOST: "ssh://mapbu-cryogenics@10.10.0.12:22"
      DOCKER_HOST_SSH_KEY: "((docker-host-ssh-key))"

- name: upload-deployment-test-releases
  serial: true
  plan:
  - in_parallel:
    - get: six-hours
      passed: [unit-integration]
    - get: bbr-deployment-test-releases
      trigger: true
    - get: bosh-backup-and-restore
      trigger: true
      passed: [unit-integration]
    - get: backup-and-restore-ci
    - get: bosh-backup-and-restore-meta
  - in_parallel:
    - task: upload-redis-test-release-maru-lite
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *maru-lite-bosh-env
    - task: upload-many-bbr-jobs-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        <<: *maru-lite-bosh-env
    - task: upload-many-bbr-jobs-release-maru
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        <<: *maru-bosh-env
    - task: upload-redis-test-release-maru-bosh
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *maru-bosh-env
    - task: upload-redis-test-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        <<: *maru-lite-bosh-env
    - task: upload-lock-ordering-release-lite-bosh-uaa
      file: backup-and-restore-ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: lock-ordering-release
        <<: *maru-lite-bosh-env

- name: deploy-fake-director
  serial: true
  serial_groups: [system-test-director]
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
      passed: [upload-deployment-test-releases]
    - get: bosh-backup-and-restore
      passed: [unit-integration, upload-deployment-test-releases]
      trigger: true
    - get: bosh-deployment
    - get: bosh-backup-and-restore-meta
    - get: bbr-director-test-releases
      trigger: true
    - get: xenial-stemcell
    - get: backup-and-restore-ci
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: maru
  - put: test-bosh-director-deployment
    params:
      manifest: bosh-backup-and-restore/fixtures/fake-director.yml
      stemcells: [xenial-stemcell/*.tgz]
      source_file: source-file/source-file.yml
      vars:
        deployment-name: test-bosh-director
        jumpbox-public-key: ((test-bosh-director-public-key))
        test_release_path: /tmp/build/put/bbr-director-test-releases/test-bosh-backup-and-restore-release
        internal_ip: *test-bosh-director-ip

- name: system-test-deployment
  serial: true
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
      passed: [upload-deployment-test-releases]
    - get: bosh-backup-and-restore
      passed: [unit-integration, upload-deployment-test-releases]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bbr-deployment-test-releases
      passed: [upload-deployment-test-releases]
      trigger: true
  - task: system-deployment-with-uaa
    file: backup-and-restore-ci/tasks/bbr-system-deployment/task.yml
    params:
      <<: *maru-lite-bosh-env

- name: system-test-director
  serial: true
  serial_groups: [system-test-director]
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
      passed: [deploy-fake-director]
    - get: bosh-backup-and-restore
      passed: [deploy-fake-director]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: bbr-director-test-releases
      passed: [deploy-fake-director]
      trigger: true
  - task: system-test-director
    file: backup-and-restore-ci/tasks/bbr-system-director/task.yml
    privileged: true
    params:
      CREDHUB_SERVER: "((maru-credhub-server))"
      CREDHUB_CLIENT: "((maru-credhub-client))"
      CREDHUB_SECRET: "((maru-credhub-secret))"
      CREDHUB_CA_CERT: "((maru-credhub-ca_cert))"
      DIRECTOR_HOST: *test-bosh-director-ip
      DIRECTOR_SSH_KEY: ((test-bosh-director-private-key))
      DIRECTOR_SSH_USERNAME: jumpbox
      BOSH_DEPLOYMENT: *test-bosh-director-deployment
      <<: *maru-bosh-env

- name: delete-system-director
  serial: true
  serial_groups: [system-test-director]
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
      passed: [system-test-director]
    - get: bosh-backup-and-restore
      passed: [system-test-director]
      trigger: true
    - get: bbr-director-test-releases
      passed: [system-test-director]
      trigger: true
    - get: backup-and-restore-ci
    - get: bosh-backup-and-restore-meta
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: maru
  - put: test-bosh-director-deployment
    params:
      delete:
        enabled: true
      source_file: source-file/source-file.yml

- name: build-rc
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: six-hours
      trigger: true
      passed: [system-test-deployment, system-test-director]
    - get: bosh-backup-and-restore
      passed: [system-test-deployment, system-test-director]
      trigger: true
      params:
        submodules: none
        disable_git_lfs: true
    - get: release-trigger
      params: {pre: rc}
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: build
    file: backup-and-restore-ci/tasks/bbr-build/task.yml
  - put: rc
    params: {file: bbr-build/bbr-*.tar}

- name: test-build-s3-config-validator
  plan:
  - in_parallel:
    - get: backup-and-restore-ci
    - get: s3-config-validator-version
      params: {pre: build}
    - get: bbr-s3-config-validator
      trigger: true
  - task: unit-test
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-unit-test/task.yml
    params:
      AWS_ACCESS_KEY: ((s3-validator-access-key))
      AWS_SECRET_KEY: ((s3-validator-secret-key))
  - task: e2e-test
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-e2e-test/task.yml
    params:
      AWS_ACCESS_KEY: ((s3-validator-access-key))
      AWS_SECRET_KEY: ((s3-validator-secret-key))
  - task: build
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-build/task.yml
  - put: s3-config-validator-version
    params: { file: s3-config-validator-version/number }
  - put: bbr-s3-config-validator-test-artifacts
    params:
      file: bbr-s3-config-validator-test-artifacts/*

- name: claim-env-pas-2-10
  serial_groups: [pas-2-10-aws-s3]
  plan:
  - in_parallel:
    - get: backup-and-restore-ci
    - put: env-pool
      resource: pcf-2-10-pool
      params:
        action: claim
      tags:
      - *toolsmiths_api_worker
    - get: bbr-s3-config-validator-test-artifacts
      passed: [test-build-s3-config-validator]
      trigger: true

- name: configure-aws-s3-filestore
  serial: true
  serial_groups: [pas-2-10-aws-s3]
  plan:
  - in_parallel:
    - get: env-pool
      passed: [claim-env-pas-2-10]
      resource: pcf-2-10-pool
      tags:
      - *toolsmiths_api_worker
      trigger: true
    - get: backup-and-restore-ci
    - get: bbr-s3-config-validator-test-artifacts
      passed: [claim-env-pas-2-10]
  - task: enable-backup-prepare-pas
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-enable-backup-prepare-pas/task.yml
    params:
      SKIP_APPLY_CHANGES: true
  - task: enable-aws-s3-filestore
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-enable-aws-s3-filestore/task.yml
    params:
      ENDPOINT: ((aws-endpoint))
      BUILDPACKS_BUCKET: ((aws-live-bucket))
      DROPLETS_BUCKET: ((aws-live-bucket))
      PACKAGES_BUCKET: ((aws-live-bucket))
      RESOURCES_BUCKET: ((aws-live-bucket))
      BACKUP_BUCKET: ((aws-backup-bucket))
      BACKUP_REGION: ((aws-backup-region))
      ACCESS_KEY: ((aws-secret-key-id))
      SECRET_KEY: ((aws-secret-key))
      REGION: ((aws-region))
      SKIP_APPLY_CHANGES: false

- name: validate-aws-s3-config
  serial: true
  serial_groups: [pas-2-10-aws-s3]
  plan:
  - in_parallel:
    - get: env-pool
      passed: [configure-aws-s3-filestore]
      resource: pcf-2-10-pool
      tags:
      - *toolsmiths_api_worker
      trigger: true
    - get: backup-and-restore-ci
    - get: bbr-s3-config-validator-test-artifacts
      passed: [configure-aws-s3-filestore]
  - task: move-and-run-validator
    file: backup-and-restore-ci/tasks/bbr-s3-config-validator-validate-aws-s3-config/task.yml

- name: unclaim-env-pas-2-10
  serial: true
  serial_groups: [pas-2-10-aws-s3]
  plan:
  - get: env-pool
    passed: [validate-aws-s3-config]
    resource: pcf-2-10-pool
    tags:
    - *toolsmiths_api_worker
    trigger: true
  - put: pcf-2-10-pool
    params:
      action: unclaim
      env_file: env-pool/metadata
    tags:
    - *toolsmiths_api_worker

- name: build-and-publish-final
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore-meta
      resource: release-trigger
      trigger: true
    - get: bosh-backup-and-restore
      passed: [build-rc]
      params:
        submodules: none
        disable_git_lfs: true
    - get: backup-and-restore-ci
    - get: homebrew-tap
    - get: bbr-s3-config-validator-artifact
  - task: get-version
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfplatformrecovery/backup-and-restore}
      inputs:
      - name: bosh-backup-and-restore-meta
      outputs:
      - name: bbr-version
      run:
        path: /bin/bash
        args:
        - -c
        - |-
          set -eux
          cat bosh-backup-and-restore-meta/bbr-current-release/version > bbr-version/number
  - task: build
    file: backup-and-restore-ci/tasks/bbr-build/task.yml
    input_mapping:
      version: bbr-version
  - task: add-bbr-s3-validator-to-build
    file: backup-and-restore-ci/tasks/add-bbr-s3-validator-to-build/task.yml
  - in_parallel:
    - task: generate-bbr-release-metadata
      file: backup-and-restore-ci/tasks/generate-bbr-release-metadata/task.yml
      input_mapping:
        version-folder: bosh-backup-and-restore-meta
        template-folder: bosh-backup-and-restore-meta
        release: bbr-build
      params:
        TEMPLATE_PATH: templates/release.yml.erb
        VERSION_PATH: bbr-current-release/version
    - task: generate-release-notes
      file: backup-and-restore-ci/tasks/generate-release-notes/task.yml
      input_mapping:
        repo: bosh-backup-and-restore
        template-folder: bosh-backup-and-restore-meta
      params:
        TEMPLATE_PATH: templates/release-notes.md.erb
  - put: bbr-pivnet
    params:
      metadata_file: pivnet-release-with-metadata/release.yml
      s3_filepath_prefix: product-files/bosh-backup-restore
      file_glob: pivnet-release-with-metadata/bbr*
  - put: bbr-release
    params:
      name: bosh-backup-and-restore-meta/bbr-current-release/version
      tag: bosh-backup-and-restore-meta/bbr-current-release/version
      tag_prefix: v
      body: release-notes/release-notes.md
      commitish: bosh-backup-and-restore/.git/refs/heads/master
      globs:
      - github-release-with-metadata/bbr*

- name: update-homebrew-formula
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-ci
    - get: homebrew-tap
    - get: bbr-final-release
      trigger: true
  - task: update-homebrew-formula
    file: backup-and-restore-ci/tasks/bbr-update-homebrew-formula/task.yml
    input_mapping:
      bbr-release: bbr-final-release
  - put: homebrew-tap
    params:
      repository: updated-homebrew-tap
      rebase: true
