---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: latest

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource


resources:
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: bosh-disaster-recovery-acceptance-tests-prs
  type: pull-request
  source:
    repo: cloudfoundry-incubator/bosh-disaster-recovery-acceptance-tests
    access_token: ((github-access-token))
    branch: master

- name: bosh-disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-disaster-recovery-acceptance-tests.git
    branch: master

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: backup-and-restore-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: ((git-private-key))
    branch: master

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))

- name: terraform
  type: terraform
  source:
    storage:
      bucket: bbr-terraform-states
      bucket_path: /
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: eu-west-1

- name: gcs-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

jobs:
- name: deploy-bosh-bengal-tiger
  serial: true
  serial_groups: [bengal-tiger]
  plan:
  - aggregate:
    - get: bosh-deployment
      trigger: true
    - get: bosh-disaster-recovery-acceptance-tests
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/b-drats-bengal-tiger/
      env_name: b-drats-bengal-tiger
      delete_on_failure: true
      vars:
        gcp_service_account_key: ((terraform_service_account_key))
    get_params:
      output_statefile: true
  - task: bosh-create-env
    file: backup-and-restore-ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-backup-and-restore-meta
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-bengal-tiger"
      OPS_FILES: "uaa.yml credhub.yml gcp/cpi.yml external-ip-not-recommended.yml jumpbox-user.yml bbr.yml"
      DIRECTOR_NAME: "bengal-tiger"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((director_service_account_key))
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-state-updated
        rebase: true
  - task: update-b-drats-cloud-config
    file: backup-and-restore-ci/tasks/update-b-drats-cloud-config/task.yml
    input_mapping:
      cloud-config: bosh-deployment
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
    params:
      CLOUD_CONFIG_PATH: gcp/cloud-config.yml
      BOSH_VARS_STORE_PATH: b-drats-bengal-tiger/creds.yml
      BOSH_CLIENT: admin
  - task: upload-b-drats-stemcell
    file: backup-and-restore-ci/tasks/upload-b-drats-stemcell/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
    params:
      STEMCELL_URL: https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-trusty-go_agent?v=3586.7
      BOSH_VARS_STORE_PATH: b-drats-bengal-tiger/creds.yml
      BOSH_CLIENT: admin
  - task: update-b-drats-resurrection
    file: backup-and-restore-ci/tasks/update-b-drats-resurrection/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
    params:
      RESURRECTION: "off"
      BOSH_VARS_STORE_PATH: b-drats-bengal-tiger/creds.yml
      BOSH_CLIENT: admin

- name: deploy-bosh-black-panther
  serial: true
  serial_groups: [black-panther]
  plan:
  - aggregate:
    - get: bosh-deployment
      trigger: true
    - get: bosh-disaster-recovery-acceptance-tests-prs
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - put: bosh-disaster-recovery-acceptance-tests-prs
    params:
      path: bosh-disaster-recovery-acceptance-tests-prs
      status: pending
      context: b-drats
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/b-drats-black-panther/
      env_name: b-drats-black-panther
      delete_on_failure: true
      vars:
        gcp_service_account_key: ((terraform_service_account_key))
    get_params:
      output_statefile: true
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: bosh-create-env
    file: backup-and-restore-ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-backup-and-restore-meta
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-black-panther"
      OPS_FILES: "uaa.yml credhub.yml gcp/cpi.yml external-ip-not-recommended.yml jumpbox-user.yml bbr.yml"
      DIRECTOR_NAME: "black-panther"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((director_service_account_key))
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-state-updated
        rebase: true
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: update-b-drats-cloud-config
    file: backup-and-restore-ci/tasks/update-b-drats-cloud-config/task.yml
    input_mapping:
      cloud-config: bosh-deployment
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
    params:
      CLOUD_CONFIG_PATH: gcp/cloud-config.yml
      BOSH_VARS_STORE_PATH: b-drats-black-panther/creds.yml
      BOSH_CLIENT: admin
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: update-b-drats-resurrection
    file: backup-and-restore-ci/tasks/update-b-drats-resurrection/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
    params:
      RESURRECTION: "off"
      BOSH_VARS_STORE_PATH: b-drats-black-panther/creds.yml
      BOSH_CLIENT: admin
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats

- name: run-b-drats-master
  serial: true
  serial_groups: [bengal-tiger]
  plan:
  - aggregate:
    - get: bosh-disaster-recovery-acceptance-tests
      passed: [deploy-bosh-bengal-tiger]
      trigger: true
    - get: bosh-deployment
      passed: [deploy-bosh-bengal-tiger]
      trigger: true
    - get: bbr-binary-release
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: terraform
      passed: [deploy-bosh-bengal-tiger]
      params:
        output_statefile: true
    - get: gcs-stemcell
  - task: extract-b-drats-integration-config
    file: backup-and-restore-ci/tasks/extract-b-drats-integration-config/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
      stemcell: gcs-stemcell
    params:
      BOSH_VARS_STORE_PATH: bosh-vars-store/b-drats-bengal-tiger/creds.yml
  - task: run-b-drats
    file: bosh-disaster-recovery-acceptance-tests/ci/run-b-drats/task.yml
    params:
      INTEGRATION_CONFIG_PATH: b-drats-integration-config/integration_config.json

- name: run-b-drats-prs
  serial: true
  serial_groups: [black-panther]
  plan:
  - aggregate:
    - get: bosh-disaster-recovery-acceptance-tests-prs
      passed: [deploy-bosh-black-panther]
      trigger: true
    - get: bosh-deployment
      passed: [deploy-bosh-black-panther]
      trigger: true
    - get: bbr-binary-release
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: terraform
      passed: [deploy-bosh-black-panther]
      params:
        output_statefile: true
    - get: gcs-stemcell
  - put: bosh-disaster-recovery-acceptance-tests-prs
    params:
      path: bosh-disaster-recovery-acceptance-tests-prs
      status: pending
      context: b-drats
  - task: extract-b-drats-integration-config
    file: backup-and-restore-ci/tasks/extract-b-drats-integration-config/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-backup-and-restore-meta
      stemcell: gcs-stemcell
    params:
      BOSH_VARS_STORE_PATH: bosh-vars-store/b-drats-black-panther/creds.yml
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: run-b-drats
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/run-b-drats/task.yml
    params:
      INTEGRATION_CONFIG_PATH: b-drats-integration-config/integration_config.json
    input_mapping:
      bosh-disaster-recovery-acceptance-tests: bosh-disaster-recovery-acceptance-tests-prs
      stemcell: gcs-stemcell
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
    on_success:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: success
        context: b-drats

- name: destroy-bosh-bengal-tiger
  serial: true
  serial_groups: [bengal-tiger]
  plan:
  - aggregate:
    - get: bosh-deployment
      passed: [run-b-drats-master]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: terraform
      passed: [run-b-drats-master]
      params:
        output_statefile: true
    - get: bbr-binary-release
      trigger: true
      passed: [run-b-drats-master]
    - get: bosh-disaster-recovery-acceptance-tests
      passed: [run-b-drats-master]
      trigger: true
  - task: bosh-delete-env
    file: backup-and-restore-ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-backup-and-restore-meta
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-bengal-tiger"
      OPS_FILES: "uaa.yml credhub.yml gcp/cpi.yml external-ip-not-recommended.yml jumpbox-user.yml"
      DIRECTOR_NAME: "bengal-tiger"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((director_service_account_key))
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-state-updated
        rebase: true
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/b-drats-bengal-tiger/
      env_name: b-drats-bengal-tiger
      action: destroy
      vars:
        gcp_service_account_key: ((terraform_service_account_key))
    get_params:
      action: destroy

- name: destroy-bosh-black-panther
  serial: true
  serial_groups: [black-panther]
  plan:
  - aggregate:
    - get: bosh-deployment
      passed: [run-b-drats-prs]
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: terraform
      passed: [run-b-drats-prs]
      params:
        output_statefile: true
    - get: bbr-binary-release
      trigger: true
      passed: [run-b-drats-prs]
    - get: bosh-disaster-recovery-acceptance-tests-prs
      passed: [run-b-drats-prs]
      trigger: true
  - task: bosh-delete-env
    file: backup-and-restore-ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-backup-and-restore-meta
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-black-panther"
      OPS_FILES: "uaa.yml credhub.yml gcp/cpi.yml external-ip-not-recommended.yml jumpbox-user.yml"
      DIRECTOR_NAME: "black-panther"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((director_service_account_key))
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-state-updated
        rebase: true
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/b-drats-black-panther/
      env_name: b-drats-black-panther
      action: destroy
      vars:
        gcp_service_account_key: ((terraform_service_account_key))
    get_params:
      action: destroy
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
