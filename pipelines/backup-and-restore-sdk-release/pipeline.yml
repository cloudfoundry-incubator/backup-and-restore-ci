---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
- name: bosh-io-stemcell
  type: docker-image
  source:
    repository: concourse/bosh-io-stemcell-resource

resources:
- name: backup-and-restore-sdk-preview-addon-pivnet
  type: pivnet
  source:
    api_token: {{pivnet-api-token}}
    product_slug: p-bosh-backup-and-restore
    access_key_id: {{pivnet-aws-access-key-id}}
    secret_access_key: {{pivnet-aws-secret-access-key}}

- name: backup-and-restore-sdk-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-sdk-release.git
    private_key: {{git-private-key}}
    branch: develop

- name: backup-and-restore-sdk-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-sdk-release.git
    private_key: {{git-private-key}}
    branch: master

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: {{git-private-key}}
    branch: master

- name: backup-and-restore-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: {{git-private-key}}
    branch: master

- name: version
  type: semver
  source:
    bucket: backup-and-restore-sdk-releases
    region_name: eu-west-1
    key: current-dev-version
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
- name: release
  type: s3
  source:
    bucket: backup-and-restore-sdk-releases
    regexp: backup-and-restore-sdk-(.*).tgz
    region_name: eu-west-1
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
- name: backup-and-restore-sdk-preview-release
  type: s3
  source:
    bucket: backup-and-restore-sdk-preview-releases
    regexp: backup-and-restore-sdk-preview-(.*).tgz
    region_name: eu-west-1
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
- name: github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: backup-and-restore-sdk-release
    draft: true
    access_token: {{github-access-token}}
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v4.*
- name: cf-deployment-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: master
- name: bbr-binary-release
  type: github-release
  source:
      owner: cloudfoundry-incubator
      repository: bosh-backup-and-restore
- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git
    branch: master
- name: s3-backuper-with-iam-instance-profile-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    target: "((ec2-bosh-director-url))"
    client: "((ec2-bosh-director-username))"
    client_secret: "((ec2-bosh-director-password))"
    ca_cert: "((ec2-bosh-director-ca-cert))"
- name: trusty-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

jobs:
- name: unit-tests
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      trigger: true
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - aggregate:
    - task: databases-unit-tests
      file: backup-and-restore-ci/tasks/database-unit-tests/task.yml
      privileged: true
      params:
        TEAM_GPG_KEY: {{team-gpg-key}}
        DOCKER_HOST: "tcp://10.0.3.12:4243"
    - task: blobstore-unit-tests
      file: backup-and-restore-ci/tasks/blobstore-unit-tests/task.yml
      params:
        TEST_AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
        TEST_AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
        TEST_ECS_ACCESS_KEY_ID: {{ecs-access-key-id}}
        TEST_ECS_SECRET_ACCESS_KEY: {{ecs-secret-access-key}}

- name: create-release
  serial: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed: [unit-tests]
      trigger: true
    - get: version
      params: {pre: rc}
  - task: bosh-clean-up
    file: backup-and-restore-ci/tasks/bosh-clean-up/task.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
  - task: create-dev-release
    file: backup-and-restore-ci/tasks/create-dev-release/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
  - put: release
    params:
      file: backup-and-restore-sdk-release-build/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}
  - task: upload-release
    file: backup-and-restore-sdk-release/ci/tasks/upload-release.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com

- name: deploy-backup-restore-sdk
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: deploy-backup-restore-sdk
    file: backup-and-restore-sdk-release/ci/tasks/deploy.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: backup-restorer
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
      MANIFEST_NAME: backup-restorer.yml

- name: deploy-postgres-9.4
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: deploy-postgres-9.4
    file: backup-and-restore-sdk-release/ci/tasks/deploy.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: postgres-9.4-dev
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
      DB_PASSWORD: postgres_password
      MANIFEST_NAME: postgres-9.4.yml
      DB_HOST: &postgres_host_94 10.244.9.2
      AVAILABILITY_ZONE: lite
      NETWORK_NAME: postgres

- name: deploy-postgres-9.6
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: deploy-postgres-9.6
    file: backup-and-restore-sdk-release/ci/tasks/deploy.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: postgres-9.6-dev
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
      DB_PASSWORD: postgres_password
      MANIFEST_NAME: postgres-9.6.yml
      DB_HOST: &postgres_host_96 10.244.9.3
      AVAILABILITY_ZONE: lite
      NETWORK_NAME: postgres
      VARS_STORE_PATH: ci/backup-and-restore-sdk-release/vars/postgres-96-vars.yml
  - task: create-ssl-user
    file: backup-and-restore-ci/tasks/create-ssl-user/task.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: postgres-9.6-dev
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
  - put: bosh-backup-and-restore-meta
    params:
      repository: bosh-backup-and-restore-meta-output
      rebase: true

- name: deploy-mysql
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: deploy-mysql
    file: backup-and-restore-sdk-release/ci/tasks/deploy.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: mysql-dev
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
      DB_PASSWORD: mysql_password
      MANIFEST_NAME: mysql.yml
      DB_HOST: &mysql-host 10.244.7.9
      AVAILABILITY_ZONE: lite
      VARS_STORE_PATH: ci/backup-and-restore-sdk-release/vars/mysql-vars.yml
  - put: bosh-backup-and-restore-meta
    params:
      repository: bosh-backup-and-restore-meta-output
      rebase: true

- name: deploy-external-rds-dbs
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: apply-rds-aws
    file: bosh-backup-and-restore-meta/ci/tasks/apply-rds-aws.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      AWS_ACCESS_KEY: {{aws-access-key-id}}
      AWS_SECRET_KEY: {{aws-secret-access-key}}
      AWS_REGION: eu-west-1
      MYSQL_5_5_PASSWORD: {{rds-5-5-password}}
      MYSQL_5_6_PASSWORD: {{rds-5-6-password}}
      MYSQL_5_7_PASSWORD: {{rds-5-7-password}}
      POSTGRES_9_4_PASSWORD: {{rds-postgres-9-4-password}}
      POSTGRES_9_6_PASSWORD: {{rds-postgres-9-6-password}}
  - put: bosh-backup-and-restore-meta
    params:
      repository: bosh-backup-and-restore-meta-output/bosh-backup-and-restore-meta
      rebase: true

- name: deploy-external-gcp-dbs
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: apply-gcp-cloud-sql
    file: bosh-backup-and-restore-meta/ci/tasks/apply-gcp-cloud-sql.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      MYSQL_5_6_PASSWORD: {{gcp-mysql-5-6-password}}
      MYSQL_5_7_PASSWORD: {{gcp-mysql-5-7-password}}
      POSTGRES_9_6_PASSWORD: {{gcp-postgres-9-6-password}}
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta-output/bosh-backup-and-restore-meta
        rebase: true

- name: deploy-aws-blobstore-sdk
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
  - task: deploy-aws-blobstore-sdk
    file: backup-and-restore-sdk-release/ci/tasks/deploy-s3-backuper.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: s3-backuper
      BOSH_ENVIRONMENT: lite-bosh.backup-and-restore.cf-app.com
      MANIFEST_NAME: s3-backuper.yml
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
      S3_BUCKET_NAME: bbr-system-test-bucket
      S3_REGION: eu-west-1
      S3_CLONED_BUCKET_NAME: bbr-system-test-bucket-clone
      S3_CLONED_BUCKET_REGION: eu-central-1
      S3_UNVERSIONED_BUCKET_NAME_FOR_VERSIONED_BACKUPER: bbr-system-test-bucket-unversioned
      S3_UNVERSIONED_BUCKET_REGION_FOR_VERSIONED_BACKUPER: eu-west-1
      S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
      S3_UNVERSIONED_BUCKET_REGION: eu-west-1
      S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
      S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1
      MINIO_ACCESS_KEY: {{minio-access-key}}
      MINIO_SECRET_KEY: {{minio-secret-key}}

- name: deploy-aws-blobstore-sdk-with-iam-instance-profile
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
      passed: [create-release]
      trigger: true
    - get: release-tarball
      resource: release
      passed: [create-release]
    - get: bosh-backup-and-restore-meta
    - get: trusty-stemcell
  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - trusty-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: eu-west-1

- name: postgres-system-tests-9.6
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-postgres-9.6
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-postgres-9.6
    - deploy-backup-restore-sdk
  - task: postgres-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_HOSTNAME: *postgres_host_96
      POSTGRES_USERNAME: test_user
      POSTGRES_PORT: 5432
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
  - task: postgres-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_HOSTNAME: *postgres_host_96
      POSTGRES_USERNAME: ssl_user
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT: {{postgres-96-ca-cert}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_TLS_VERIFY_IDENTITY: false
  - task: postgres-mutual-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_mutual_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_HOSTNAME: *postgres_host_96
      POSTGRES_USERNAME: mutual_tls_user
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT: {{postgres-96-ca-cert}}
      POSTGRES_CLIENT_CERT: {{postgres-96-client-cert}}
      POSTGRES_CLIENT_KEY: {{postgres-96-client-key}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_TLS_VERIFY_IDENTITY: false

- name: gcp-postgres-system-tests-9.6
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
  - task: postgres-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{gcp-postgres-9-6-password}}
      POSTGRES_HOSTNAME: {{gcp-postgres-9-6-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
  - task: postgres-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{gcp-postgres-9-6-password}}
      POSTGRES_HOSTNAME: {{gcp-postgres-9-6-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT_PATH: {{gcp-postgres-9-6-ca-cert-path}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_TLS_VERIFY_IDENTITY: false
      TEST_SSL_USER_REQUIRES_SSL: false
  - task: postgres-mutual-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_mutual_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{gcp-postgres-9-6-password}}
      POSTGRES_HOSTNAME: {{gcp-postgres-9-6-mutual-tls-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT_PATH: {{gcp-postgres-9-6-mutual-tls-ca-cert-path}}
      POSTGRES_CLIENT_CERT_PATH: {{gcp-postgres-9-6-mutual-tls-client-cert-path}}
      POSTGRES_CLIENT_KEY_PATH: {{gcp-postgres-9-6-mutual-tls-client-key-path}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_TLS_VERIFY_IDENTITY: false
      TEST_SSL_USER_REQUIRES_SSL: false

- name: rds-postgres-system-tests-9.6
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
  - task: postgres-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{rds-postgres-9-6-password}}
      POSTGRES_HOSTNAME: {{rds-postgres-9-6-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
  - task: postgres-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{rds-postgres-9-6-password}}
      POSTGRES_HOSTNAME: {{rds-postgres-9-6-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT_PATH: {{rds-ca-cert-path}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_SSL_USER_REQUIRES_SSL: false

- name: postgres-system-tests-9.4
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-postgres-9.4
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-postgres-9.4
    - deploy-backup-restore-sdk
  - task: postgres-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_HOSTNAME: *postgres_host_94
      POSTGRES_USERNAME: test_user
      POSTGRES_PORT: 5432
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}

- name: rds-postgres-system-tests-9.4
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
  - task: postgres-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{rds-postgres-9-4-password}}
      POSTGRES_HOSTNAME: {{rds-postgres-9-4-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
  - task: postgres-tls-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/postgres-system-tests.yml
    params:
      TEST_SUITE_NAME: postgresql_tls
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      POSTGRES_PASSWORD: {{rds-postgres-9-4-password}}
      POSTGRES_HOSTNAME: {{rds-postgres-9-4-hostname}}
      POSTGRES_USERNAME: root
      POSTGRES_PORT: 5432
      POSTGRES_CA_CERT_PATH: {{rds-ca-cert-path}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_SSL_USER_REQUIRES_SSL: false

- name: mariadb-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-mysql
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-mysql
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: mysql_password
      MYSQL_HOSTNAME: *mysql-host
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      MYSQL_CA_CERT: {{mysql-ca-cert}}
      MYSQL_CLIENT_CERT: {{mysql-client-cert}}
      MYSQL_CLIENT_KEY: {{mysql-client-key}}
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      TEST_TLS_VERIFY_IDENTITY: false
      TEST_TLS_MUTUAL_TLS: false

- name: rds-mysql-5.5-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: {{rds-5-5-password}}
      MYSQL_HOSTNAME: {{rds-5-5-hostname}}
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      MYSQL_CA_CERT_PATH: {{rds-ca-cert-path}}
      TEST_TLS_MUTUAL_TLS: false

- name: rds-mysql-5.6-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: {{rds-5-6-password}}
      MYSQL_HOSTNAME: {{rds-5-6-hostname}}
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      MYSQL_CA_CERT_PATH: {{rds-ca-cert-path}}
      TEST_TLS_MUTUAL_TLS: false

- name: rds-mysql-5.7-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-rds-dbs
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: {{rds-5-7-password}}
      MYSQL_HOSTNAME: {{rds-5-7-hostname}}
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      MYSQL_CA_CERT_PATH: {{rds-ca-cert-path}}
      TEST_TLS_MUTUAL_TLS: false

- name: gcp-mysql-5.6-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: {{gcp-mysql-5-6-password}}
      MYSQL_HOSTNAME: {{gcp-mysql-5-6-hostname}}
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      MYSQL_CA_CERT_PATH: {{gcp-mysql-5-6-ca-cert-path}}
      MYSQL_CLIENT_CERT_PATH: {{gcp-mysql-5-6-client-cert-path}}
      MYSQL_CLIENT_KEY_PATH: {{gcp-mysql-5-6-client-key-path}}
      TEST_TLS_VERIFY_IDENTITY: false

- name: gcp-mysql-5.7-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-external-gcp-dbs
    - deploy-backup-restore-sdk
  - task: mysql-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/mysql-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      MYSQL_PASSWORD: {{gcp-mysql-5-7-password}}
      MYSQL_HOSTNAME: {{gcp-mysql-5-7-hostname}}
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      SSH_PROXY_HOST: 104.199.27.23
      SSH_PROXY_USER: vcap
      SSH_PROXY_PRIVATE_KEY: {{lite-bosh-ssh-key}}
      MYSQL_CA_CERT_PATH: {{gcp-mysql-5-7-ca-cert-path}}
      MYSQL_CLIENT_CERT_PATH: {{gcp-mysql-5-7-client-cert-path}}
      MYSQL_CLIENT_KEY_PATH: {{gcp-mysql-5-7-client-key-path}}
      TEST_TLS_VERIFY_IDENTITY: false

- name: s3-blobstore-backuper-system-tests
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-aws-blobstore-sdk
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-aws-blobstore-sdk
  - task: s3-blobstore-backuper-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/s3-system-tests.yml
    params:
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_CLIENT_SECRET: {{lite-bosh-director-password}}
      BOSH_CLIENT: {{lite-bosh-director-username}}
      BOSH_DEPLOYMENT: s3-backuper
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
      AWS_TEST_BUCKET_NAME: bbr-system-test-bucket
      AWS_TEST_BUCKET_REGION: eu-west-1
      AWS_TEST_CLONE_BUCKET_NAME: bbr-system-test-bucket-clone
      AWS_TEST_CLONE_BUCKET_REGION: eu-central-1
      AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
      AWS_TEST_UNVERSIONED_BUCKET_REGION: eu-west-1
      S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
      S3_UNVERSIONED_BUCKET_REGION: eu-west-1
      S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
      S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1

- name: s3-blobstore-system-tests-with-iam-instance-profile
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    passed:
    - deploy-aws-blobstore-sdk-with-iam-instance-profile
    trigger: true
  - get: bosh-backup-and-restore-meta
  - get: release-tarball
    resource: release
    passed:
    - deploy-aws-blobstore-sdk-with-iam-instance-profile
  - task: s3-blobstore-backuper-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/s3-system-tests.yml
    params:
      FOCUS_SPEC: backs up and restores in-place # focus on one it to avoid redundant testing
      TEAM_GPG_KEY: {{team-gpg-key}}
      BOSH_ENVIRONMENT: "((ec2-bosh-director-url))"
      BOSH_CLIENT_SECRET: "((ec2-bosh-director-password))"
      BOSH_CLIENT: "((ec2-bosh-director-username))"
      BOSH_DEPLOYMENT: s3-backuper
      BOSH_CA_CERT: "((ec2-bosh-director-ca-cert))"
      BOSH_GW_USER: jumpbox
      BOSH_GW_HOST: "((ec2-bosh-director-url))"
      BOSH_GW_PRIVATE_KEY: "((ec2-bosh-gw-private-key))"
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
      AWS_TEST_BUCKET_NAME: iam-instance-role-test
      AWS_TEST_BUCKET_REGION: eu-west-1
      AWS_TEST_CLONE_BUCKET_NAME: iam-instance-role-test-clone
      AWS_TEST_CLONE_BUCKET_REGION: eu-west-1
      AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
      AWS_TEST_UNVERSIONED_BUCKET_REGION: eu-west-1

- name: deploy-cf-with-external-s3-blobstore
  serial: true
  serial_groups: [bbr-s3]
  plan:
  - aggregate:
    - get: cf-deployment-master
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - s3-blobstore-backuper-system-tests
    - get: release-tarball
      resource: release
      passed:
      - postgres-system-tests-9.4
      - postgres-system-tests-9.6
      - gcp-postgres-system-tests-9.6
      - rds-postgres-system-tests-9.4
      - rds-postgres-system-tests-9.6
      - mariadb-system-tests
      - s3-blobstore-backuper-system-tests
      - rds-mysql-5.5-system-tests
      - rds-mysql-5.6-system-tests
      - rds-mysql-5.7-system-tests
      - gcp-mysql-5.6-system-tests
      - gcp-mysql-5.7-system-tests
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: create-external-cf-databases
    file: backup-and-restore-ci/tasks/create-external-cf-databases/task.yml
    input_mapping:
      vars-store: bosh-backup-and-restore-meta
    params:
      VARS_STORE_FILE: external-blobstore-directors/aws-s3/cf-deployment-variables.yml
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment-master
    params:
      INFRASTRUCTURE: google
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
  - task: deploy-cf-with-external-s3
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment-master
      ops-files: cf-deployment-master
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
      release: backup-and-restore-sdk-release
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp_service_account_key.json
      BBL_GCP_PROJECT_ID: cf-backup-and-restore
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
      SYSTEM_DOMAIN: bbr-s3.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/workaround/use-3-azs-for-router.yml operations/use-compiled-releases.yml operations/use-external-dbs.yml operations/backup-and-restore/enable-backup-restore.yml operations/use-s3-blobstore.yml operations/backup-and-restore/enable-backup-restore-s3-versioned.yml"
      VARS_STORE_FILE: external-blobstore-directors/aws-s3/cf-deployment-variables.yml
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-vars-store
        rebase: true
  - task: wait-for-cf-api
    file: backup-and-restore-ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.bbr-s3.cf-app.com

- name: run-drats-external-s3-blobstore
  serial: true
  serial_groups: [bbr-s3]
  plan:
  - get: bosh-backup-and-restore-meta
    passed: [deploy-cf-with-external-s3-blobstore]
  - get: release-tarball
    resource: release
    passed:
    - deploy-cf-with-external-s3-blobstore
  - get: cf-deployment-master
    passed: [deploy-cf-with-external-s3-blobstore]
    trigger: true
  - get: backup-and-restore-sdk-release
    trigger: true
    passed: [deploy-cf-with-external-s3-blobstore]
  - get: disaster-recovery-acceptance-tests
    trigger: true
  - get: bbr-binary-release
    trigger: true
  - task: unit-tests
    file: disaster-recovery-acceptance-tests/ci/unit-tests/task.yml
    params:
      GITHUB_SSH_KEY: {{github-ssh-key}}
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats/task.yml
    privileged: true
    params:
      CF_DEPLOYMENT_NAME: cf
      CF_API_URL: https://api.bbr-s3.cf-app.com
      CF_ADMIN_USERNAME: admin
      CF_ADMIN_PASSWORD: {{bbr-s3-cf-admin-password}}
      BOSH_CA_CERT: {{bbr-s3-bosh-cert}}
      BOSH_CLIENT: admin
      BOSH_CLIENT_SECRET: {{bbr-s3-bosh-client-secret}}
      BOSH_ENVIRONMENT: {{bbr-s3-bosh-url}}
      BOSH_GW_USER: jumpbox
      BOSH_GW_HOST: {{bbr-s3-ssh-gateway-host}}
      BOSH_GW_PRIVATE_KEY: {{bbr-s3-ssh-gateway-key}}
      SSH_DESTINATION_CIDR: "10.0.0.0/8"
      DEFAULT_TIMEOUT_MINS: 30
      SKIP_SUITE_NAME: credhub|nfs

- name: delete-cf-deployment-external-s3-blobstore
  serial: true
  serial_groups: [bbr-s3]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
      passed: [run-drats-external-s3-blobstore]
    - get: backup-and-restore-sdk-release
      passed: [run-drats-external-s3-blobstore]
      trigger: true
    - get: backup-and-restore-ci
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp_service_account_key.json
      BBL_GCP_PROJECT_ID: cf-backup-and-restore
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
  - task: drop-external-cf-databases
    file: backup-and-restore-ci/tasks/drop-external-cf-databases/task.yml
    input_mapping:
      vars-store: bosh-backup-and-restore-meta
    params:
      VARS_STORE_FILE: external-blobstore-directors/aws-s3/cf-deployment-variables.yml

- name: deploy-cf-with-unversioned-external-s3-blobstore
  serial: true
  serial_groups: [bbr-s3-unversioned]
  plan:
  - aggregate:
    - get: cf-deployment-master
      resource: cf-deployment-master
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - s3-blobstore-backuper-system-tests
    - get: release-tarball
      resource: release
      passed:
      - postgres-system-tests-9.4
      - postgres-system-tests-9.6
      - gcp-postgres-system-tests-9.6
      - rds-postgres-system-tests-9.4
      - rds-postgres-system-tests-9.6
      - mariadb-system-tests
      - s3-blobstore-backuper-system-tests
      - rds-mysql-5.5-system-tests
      - rds-mysql-5.6-system-tests
      - rds-mysql-5.7-system-tests
      - gcp-mysql-5.6-system-tests
      - gcp-mysql-5.7-system-tests
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment-master
    params:
      INFRASTRUCTURE: google
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
  - task: deploy-cf-with-external-s3
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      cf-deployment: cf-deployment-master
      ops-files: cf-deployment-master
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
      release: backup-and-restore-sdk-release
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp_service_account_key.json
      BBL_GCP_PROJECT_ID: cf-backup-and-restore
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
      SYSTEM_DOMAIN: bbr-s3-unversioned.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/workaround/use-3-azs-for-router.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/use-s3-blobstore.yml operations/backup-and-restore/enable-backup-restore-s3-unversioned.yml"
      VARS_STORE_FILE: external-blobstore-directors/aws-s3-unversioned/cf-deployment-variables.yml
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-vars-store
        rebase: true
  - task: wait-for-cf-api
    file: backup-and-restore-ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.bbr-s3-unversioned.cf-app.com

- name: run-drats-external-s3-unversioned-blobstore
  serial: true
  serial_groups: [bbr-s3-unversioned]
  plan:
  - get: release-tarball
    resource: release
    passed:
    - deploy-cf-with-unversioned-external-s3-blobstore
  - get: cf-deployment-master
    resource: cf-deployment-master
    passed:
    - deploy-cf-with-unversioned-external-s3-blobstore
    trigger: true
  - get: backup-and-restore-sdk-release
    trigger: true
    passed:
    - deploy-cf-with-unversioned-external-s3-blobstore
  - get: disaster-recovery-acceptance-tests
    trigger: true
  - get: bbr-binary-release
    trigger: true
  - get: bosh-backup-and-restore-meta
    passed: [deploy-cf-with-unversioned-external-s3-blobstore]
  - task: unit-tests
    file: disaster-recovery-acceptance-tests/ci/unit-tests/task.yml
    params:
      GITHUB_SSH_KEY: {{github-ssh-key}}
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats/task.yml
    privileged: true
    params:
      CF_DEPLOYMENT_NAME: cf
      CF_API_URL: https://api.bbr-s3-unversioned.cf-app.com
      CF_ADMIN_USERNAME: admin
      CF_ADMIN_PASSWORD: {{bbr-s3-unversioned-cf-admin-password}}
      BOSH_CA_CERT: {{bbr-s3-unversioned-bosh-cert}}
      BOSH_CLIENT: admin
      BOSH_CLIENT_SECRET: {{bbr-s3-unversioned-bosh-client-secret}}
      BOSH_ENVIRONMENT: {{bbr-s3-unversioned-bosh-url}}
      BOSH_GW_USER: jumpbox
      BOSH_GW_HOST: {{bbr-s3-unversioned-ssh-gateway-host}}
      BOSH_GW_PRIVATE_KEY: {{bbr-s3-unversioned-ssh-gateway-key}}
      SSH_DESTINATION_CIDR: "10.0.0.0/8"
      DEFAULT_TIMEOUT_MINS: 30
      SKIP_SUITE_NAME: credhub|nfs

- name: delete-cf-deployment-external-s3-unversioned-blobstore
  serial: true
  serial_groups: [bbr-s3-unversioned]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
      passed: [run-drats-external-s3-blobstore]
    - get: backup-and-restore-sdk-release
      passed: [run-drats-external-s3-unversioned-blobstore]
      trigger: true
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp_service_account_key.json
      BBL_GCP_PROJECT_ID: cf-backup-and-restore
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/

- name: create-final-major
  serial: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: backup-and-restore-sdk-release-master
    - get: release-tarball
      resource: release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: version
      params: {bump: major}
  - task: create-final-release
    file: backup-and-restore-ci/tasks/create-final-release/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
  - task: generate-release-notes
    file: backup-and-restore-ci/tasks/generate-release-notes/task.yml
    input_mapping:
      repo: backup-and-restore-sdk-release
      template-folder: bosh-backup-and-restore-meta
    params:
      TEMPLATE_PATH: templates/release-notes.md.erb
  - put: backup-and-restore-sdk-release-master
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      commitish: backup-and-restore-sdk-release/.git/refs/heads/develop
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: create-final-minor
  serial: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: backup-and-restore-sdk-release-master
    - get: release-tarball
      resource: release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: version
      params: {bump: minor}
  - task: create-final-release
    file: backup-and-restore-ci/tasks/create-final-release/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
  - task: generate-release-notes
    file: backup-and-restore-ci/tasks/generate-release-notes/task.yml
    input_mapping:
      repo: backup-and-restore-sdk-release
      template-folder: bosh-backup-and-restore-meta
    params:
      TEMPLATE_PATH: templates/release-notes.md.erb
  - put: backup-and-restore-sdk-release-master
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      commitish: backup-and-restore-sdk-release/.git/refs/heads/develop
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: create-final-patch
  serial: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: backup-and-restore-sdk-release-master
    - get: release-tarball
      resource: release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: version
      params: {bump: patch}
  - task: create-final-release
    file: backup-and-restore-ci/tasks/create-final-release/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
  - task: generate-release-notes
    file: backup-and-restore-ci/tasks/generate-release-notes/task.yml
    input_mapping:
      repo: backup-and-restore-sdk-release
      template-folder: bosh-backup-and-restore-meta
    params:
      TEMPLATE_PATH: templates/release-notes.md.erb
  - put: backup-and-restore-sdk-release-master
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      commitish: backup-and-restore-sdk-release/refs/heads/develop
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: create-backup-and-restore-sdk-preview-release
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-ci
    - get: backup-and-restore-sdk-release
      passed:
      - run-drats-external-s3-blobstore
      - run-drats-external-s3-unversioned-blobstore
    - get: github-release
      trigger: true
  - task: create-backup-and-restore-sdk-preview-release-tarball
    file: backup-and-restore-ci/tasks/create-preview-release/task.yml
  - put: backup-and-restore-sdk-preview-release
    params:
      file: backup-and-restore-sdk-release-build/backup-and-restore-sdk-preview-*.tgz

- name: upload-backup-and-restore-sdk-preview-pivnet
  serial: true
  serial_groups: [version]
  plan:
  - get: backup-and-restore-sdk-preview-release
    passed: [create-backup-and-restore-sdk-preview-release]
  - get: bosh-backup-and-restore-meta
  - get: backup-and-restore-ci
  - get: github-release
    passed: [create-backup-and-restore-sdk-preview-release]
    trigger: true
  - task: generate-release-metadata
    file: backup-and-restore-ci/tasks/generate-release-metadata/task.yml
    input_mapping:
      release: backup-and-restore-sdk-preview-release
      version-folder: github-release
      template-folder: bosh-backup-and-restore-meta
    params:
      TEMPLATE_PATH: templates/release-sdk-preview.yml.erb
  - put: backup-and-restore-sdk-preview-addon-pivnet
    params:
      metadata_file: release-with-metadata/release.yml
      s3_filepath_prefix: product-files/bosh-backup-restore
      file_glob: release-with-metadata/*.tgz

- name: merge-master-into-develop
  serial: true
  plan:
  - aggregate:
    - get: backup-and-restore-sdk-release
    - get: backup-and-restore-sdk-release-master
      trigger: true
  - put: backup-and-restore-sdk-release
    params:
      repository: backup-and-restore-sdk-release-master
      merge: true
