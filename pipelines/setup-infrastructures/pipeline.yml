---
common_bbl_params: &COMMON_BBL_PARAMS
  BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
  BBL_GCP_PROJECT_ID: cf-backup-and-restore
  GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
  GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
common_bbl_up_params: &COMMON_BBL_UP_PARAMS
  << : *COMMON_BBL_PARAMS
  BBL_IAAS: gcp
  BBL_GCP_REGION: europe-west1

resource_types:
- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: latest

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v6.*

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: backup-and-restore-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: ((git-private-key))
    branch: master

- name: terraform
  type: terraform
  source:
    storage:
      bucket: bbr-terraform-states
      bucket_path: /
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: eu-west-1

jobs:
- name: setup-infrastructure-aws-s3
  serial: true
  serial_groups: [aws-s3]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
      BBL_LB_CERT: ((aws-s3-lb-cert))
      BBL_LB_KEY: ((aws-s3-lb-key))
      LB_DOMAIN: bbr-s3.cf-app.com
      BBL_ENV_NAME: bbr-s3
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-aws-s3
  serial: true
  serial_groups: [aws-s3]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-aws-s3]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-aws-s3]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-aws-s3-unversioned
  serial: true
  serial_groups: [aws-s3-unversioned]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
      BBL_LB_CERT: ((aws-s3-unversioned-lb-cert))
      BBL_LB_KEY: ((aws-s3-unversioned-lb-key))
      LB_DOMAIN: bbr-s3-unversioned.cf-app.com
      BBL_ENV_NAME: bbr-s3-unversioned
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-aws-s3-unversioned
  serial: true
  serial_groups: [aws-s3-unversioned]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-aws-s3-unversioned]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-aws-s3-unversioned]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-azure
  serial: true
  serial_groups: [azure]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/azure/
      BBL_LB_CERT: ((azure-lb-cert))
      BBL_LB_KEY: ((azure-lb-key))
      LB_DOMAIN: bbr-azure.cf-app.com
      BBL_ENV_NAME: bbr-azure
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-azure
  serial: true
  serial_groups: [azure]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-azure]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-azure]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/azure/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-aws-ec2
  serial: true
  serial_groups: [aws-ec2]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: ((aws-access-key-id))
      BBL_AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      BBL_AWS_REGION: eu-west-1
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2/
      BBL_LB_CERT: ((aws-ec2-lb-cert))
      BBL_LB_KEY: ((aws-ec2-lb-key))
      LB_DOMAIN: bbr-ec2.cf-app.com
      BBL_ENV_NAME: bbr-aws-ec2
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: add-iam-instance-profile-vm-extension
    file: backup-and-restore-ci/tasks/update-cloud-config/task.yml
    params:
      OPS_FILE_PATH: external-blobstore-directors/aws-ec2/ops-files/add-iam-instance-profile-vm-extension.yml
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2
    input_mapping:
      bbl-state: updated-bbl-state
      bbl-config: bosh-backup-and-restore-meta
      ops-files: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/external-blobstore-directors/aws-ec2/iam-roles-terraform/
      env_name: external-blobstore-aws-ec2
      delete_on_failure: true
      vars:
        gcp_service_account_key: ((gcp_service_account_key))

- name: destroy-infrastructure-aws-ec2
  serial: true
  serial_groups: [aws-ec2]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-aws-ec2]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-aws-ec2]
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/external-blobstore-directors/aws-ec2/iam-roles-terraform/
      env_name: external-blobstore-aws-ec2
      action: destroy
    get_params:
      action: destroy
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: ((aws-access-key-id))
      BBL_AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-persian
  serial: true
  serial_groups: [drats-persian]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-persian/
      BBL_LB_CERT: ((drats-persian-lb-cert))
      BBL_LB_KEY: ((drats-persian-lb-key))
      LB_DOMAIN: ((drats-persian-lb-domain))
      BBL_ENV_NAME: drats-persian
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-persian
  serial: true
  serial_groups: [drats-persian]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-persian]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-persian]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-persian/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-dragon-li
  serial: true
  serial_groups: [drats-dragon-li]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-dragon-li/
      BBL_LB_CERT: ((drats-dragon-li-lb-cert))
      BBL_LB_KEY: ((drats-dragon-li-lb-key))
      LB_DOMAIN: ((drats-dragon-li-lb-domain))
      BBL_ENV_NAME: drats-dragon-li
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-dragon-li
  serial: true
  serial_groups: [drats-dragon-li]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-dragon-li]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-dragon-li]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-dragon-li/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-pr-ragdoll
  serial: true
  serial_groups: [drats-pr-ragdoll]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_LB_CERT: ((drats-pr-ragdoll-lb-cert))
      BBL_STATE_DIR: drats-pr-ragdoll/
      BBL_LB_KEY: ((drats-pr-ragdoll-lb-key))
      LB_DOMAIN: ((drats-pr-ragdoll-lb-domain))
      BBL_ENV_NAME: drats-pr-ragdoll
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-pr-ragdoll
  serial: true
  serial_groups: [drats-pr-ragdoll]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-pr-ragdoll]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-pr-ragdoll]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-pr-ragdoll/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-continuous-drats
  serial: true
  serial_groups: [continuous-drats]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: continuous-drats/
      BBL_LB_CERT: ((continuous-drats-lb-cert))
      BBL_LB_KEY: ((continuous-drats-lb-key))
      LB_DOMAIN: ((continuous-drats-lb-domain))
      BBL_ENV_NAME: continuous-drats
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-continuous-drats
  serial: true
  serial_groups: [continuous-drats]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-continuous-drats]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-continuous-drats]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: continuous-drats/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-papillon/
      BBL_LB_CERT: ((drats-papillon-lb-cert))
      BBL_LB_KEY: ((drats-papillon-lb-key))
      LB_DOMAIN: ((drats-papillon-lb-domain))
      BBL_ENV_NAME: drats-papillon
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-papillon]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-papillon]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-papillon/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-with-config-manx
  serial: true
  serial_groups: [drats-with-config-manx]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-with-config-manx/
      BBL_LB_CERT: ((drats-with-config-manx-lb-cert))
      BBL_LB_KEY: ((drats-with-config-manx-lb-key))
      LB_DOMAIN: ((drats-with-config-manx-lb-domain))
      BBL_ENV_NAME: drats-with-config-manx
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-with-config-manx
  serial: true
  serial_groups: [drats-with-config-manx]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-with-config-manx]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-with-config-manx]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-with-config-manx/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-opt-components-norwegianforest
  serial: true
  serial_groups: [drats-opt-components-norwegianforest]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-opt-components-norwegianforest/
      BBL_LB_CERT: ((drats-opt-components-norwegianforest-lb-cert))
      BBL_LB_KEY: ((drats-opt-components-norwegianforest-lb-key))
      LB_DOMAIN: ((drats-opt-components-norwegianforest-lb-domain))
      BBL_ENV_NAME: drats-opt-components-norwegianforest
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-drats-opt-components-norwegianforest
  serial: true
  serial_groups: [drats-opt-components-norwegianforest]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-drats-opt-components-norwegianforest]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-drats-opt-components-norwegianforest]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-opt-components-norwegianforest/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-maru
  serial: true
  serial_groups: [maru]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: maru/
      BBL_ENV_NAME: maru
      SKIP_LB_CREATION: true
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-maru
  serial: true
  serial_groups: [maru]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      passed: [setup-infrastructure-maru]
    - get: bosh-backup-and-restore-meta
      passed: [setup-infrastructure-maru]
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: maru/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

