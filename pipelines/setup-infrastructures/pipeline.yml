---
common_bbl_params: &COMMON_BBL_PARAMS
  BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
  BBL_GCP_PROJECT_ID: cf-backup-and-restore
  GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
  GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
common_bbl_up_params: &COMMON_BBL_UP_PARAMS
  << : *COMMON_BBL_PARAMS
  BBL_IAAS: gcp
  BBL_GCP_REGION: europe-west1

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v9.*

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((git-private-key))
    git_crypt_key: ((git-crypt-key))
    branch: master

- name: backup-and-restore-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-ci.git
    private_key: ((git-private-key))
    branch: master

- name: bosh-bootloader
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-bootloader.git
    branch: master
    tag_filter: v6.*

- name: terraform
  type: terraform
  source:
    backend_type: s3
    backend_config:
      bucket: bbr-terraform-states
      key: terraform.tfstate
      access_key: ((aws-access-key-id))
      secret_key: ((aws-secret-access-key))
      region: eu-west-1

- name: relint-trackerbot
  type: git
  source:
    uri: git@github.com:pivotal-cf-experimental/relint-trackerbot.git
    private_key: ((git-private-key))
    branch: master

- name: bbr-tracker-bot
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: ((pws-username))
    password: ((pws-password))
    organization: ((pws-org))
    space: ((pws-tracker-bot-space))
    skip_cert_check: false

- name: every-tuesday
  type: time
  source:
    start: 8:00 AM
    stop: 9:00 AM
    days:
    - Tuesday
    location: Europe/London

- name: every-sunday
  type: time
  source:
    start: 8:00 AM
    stop: 9:00 AM
    days:
    - Sunday
    location: Europe/London

- name: everyday
  type: time
  source:
    start: 8:00 AM
    stop: 9:00 AM
    days:
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    location: Europe/London

- name: docker-host-deployment
  type: bosh-deployment
  source:
    deployment: docker-host
    target: ((bosh_target))
    client: ((bosh_client))
    client_secret: ((bosh_client_secret))
    ca_cert: ((bosh_ca_cert))
    jumpbox_url: ((bosh_jumpbox_url))
    jumpbox_username: ((bosh_jumpbox_username))
    jumpbox_ssh_key: ((bosh_jumpbox_ssh_key))

- name: docker-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/docker-boshrelease
    regexp: 29.*

groups:
- name: create
  jobs:
  - setup-infrastructure-aws-s3
  - setup-infrastructure-aws-s3-unversioned
  - setup-infrastructure-azure
  - setup-infrastructure-aws-ec2
  - setup-infrastructure-drats-pr-ragdoll
  - setup-infrastructure-drats-papillon
  - setup-infrastructure-drats-with-config-manx
  - setup-infrastructure-maru
  - setup-infrastructure-maru-lite
  - setup-infrastructure-gcs
  - setup-gcp-iam-role-bosh-director
  - setup-gcp-iam-role-bbl
  - setup-platform-recovery-zone
  - deploy-tracker-bot
  - deploy-docker-host
  - renew-environments

- name: clean-up
  jobs:
  - clean-up-aws-s3
  - clean-up-aws-s3-unversioned
  - clean-up-azure
  - clean-up-aws-ec2
  - clean-up-drats-pr-ragdoll
  - clean-up-drats-papillon
  - clean-up-drats-with-config-manx
  - clean-up-maru
  - clean-up-maru-lite
  - clean-up-gcs
  - delete-unattached-disks

- name: destroy
  jobs:
  - destroy-infrastructure-aws-s3
  - destroy-infrastructure-aws-s3-unversioned
  - destroy-infrastructure-azure
  - destroy-infrastructure-aws-ec2
  - destroy-infrastructure-drats-pr-ragdoll
  - destroy-infrastructure-drats-papillon
  - destroy-infrastructure-drats-with-config-manx
  - destroy-infrastructure-maru
  - destroy-infrastructure-maru-lite
  - destroy-infrastructure-gcs
  - destroy-gcp-iam-role-bosh-director
  - destroy-gcp-iam-role-bbl
  - destroy-platform-recovery-zone

jobs:
- name: setup-infrastructure-aws-s3
  serial: true
  serial_groups: [aws-s3]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
      BBL_LB_CERT: ((aws-s3-lb-cert))
      BBL_LB_KEY: ((aws-s3-lb-key))
      LB_DOMAIN: bbr-s3.platform-recovery.cf-app.com
      BBL_ENV_NAME: bbr-s3
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/aws-s3/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/aws-s3/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-aws-s3
  serial: true
  serial_groups: [aws-s3]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-aws-s3
  serial: true
  serial_groups: [aws-s3]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/aws-s3/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/aws-s3/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-aws-s3-unversioned
  serial: true
  serial_groups: [aws-s3-unversioned]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
      BBL_LB_CERT: ((aws-s3-unversioned-lb-cert))
      BBL_LB_KEY: ((aws-s3-unversioned-lb-key))
      LB_DOMAIN: bbr-s3-unversioned.platform-recovery.cf-app.com
      BBL_ENV_NAME: bbr-s3-unversioned
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/aws-s3-unversioned/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/aws-s3-unversioned/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-aws-s3-unversioned
  serial: true
  serial_groups: [aws-s3-unversioned]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-aws-s3-unversioned
  serial: true
  serial_groups: [aws-s3-unversioned]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/aws-s3-unversioned/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/aws-s3-unversioned/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/aws-s3-unversioned/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-azure
  serial: true
  serial_groups: [azure]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/azure/
      BBL_LB_CERT: ((azure-lb-cert))
      BBL_LB_KEY: ((azure-lb-key))
      LB_DOMAIN: bbr-azure.platform-recovery.cf-app.com
      BBL_ENV_NAME: bbr-azure
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/azure/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/azure/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-azure
  serial: true
  serial_groups: [azure]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: external-blobstore-directors/azure/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-azure
  serial: true
  serial_groups: [azure]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/azure/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/azure/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/azure/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-aws-ec2
  serial: true
  serial_groups: [aws-ec2]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: ((aws-access-key-id))
      BBL_AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      BBL_AWS_REGION: eu-west-1
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2/
      BBL_LB_CERT: ((aws-ec2-lb-cert))
      BBL_LB_KEY: ((aws-ec2-lb-key))
      LB_DOMAIN: bbr-ec2.cf-app.com
      BBL_ENV_NAME: bbr-aws-ec2
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/external-blobstore-directors/aws-ec2/iam-roles-terraform/
      env_name: external-blobstore-aws-ec2
      delete_on_failure: true

- name: clean-up-aws-ec2
  serial: true
  serial_groups: [aws-ec2]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-aws-ec2
  serial: true
  serial_groups: [aws-ec2]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/external-blobstore-directors/aws-ec2/iam-roles-terraform/
      env_name: external-blobstore-aws-ec2
      action: destroy
    get_params:
      action: destroy
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: ((aws-access-key-id))
      BBL_AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
      BBL_STATE_DIR: external-blobstore-directors/aws-ec2/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-pr-ragdoll
  serial: true
  serial_groups: [drats-pr-ragdoll]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_LB_CERT: ((drats-pr-ragdoll-lb-cert))
      BBL_STATE_DIR: drats-pr-ragdoll/
      BBL_LB_KEY: ((drats-pr-ragdoll-lb-key))
      LB_DOMAIN: ((drats-pr-ragdoll-lb-domain))
      BBL_ENV_NAME: drats-pr-ragdoll
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-pr-ragdoll/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-pr-ragdoll/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true


- name: clean-up-drats-pr-ragdoll
  serial: true
  serial_groups: [drats-pr-ragdoll]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-drats-pr-ragdoll
  serial: true
  serial_groups: [drats-pr-ragdoll]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-pr-ragdoll/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-pr-ragdoll/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true`
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-pr-ragdoll/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-papillon/
      BBL_LB_CERT: ((drats-papillon-lb-cert))
      BBL_LB_KEY: ((drats-papillon-lb-key))
      LB_DOMAIN: ((drats-papillon-lb-domain))
      BBL_ENV_NAME: drats-papillon
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-papillon/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-papillon/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: drats-papillon/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-drats-papillon
  serial: true
  serial_groups: [drats-papillon]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-papillon/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-papillon/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-papillon/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-drats-with-config-manx
  serial: true
  serial_groups: [drats-with-config-manx]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: drats-with-config-manx/
      BBL_LB_CERT: ((drats-with-config-manx-lb-cert))
      BBL_LB_KEY: ((drats-with-config-manx-lb-key))
      LB_DOMAIN: ((drats-with-config-manx-lb-domain))
      BBL_ENV_NAME: drats-with-config-manx
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-with-config-manx/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-with-config-manx/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-drats-with-config-manx
  serial: true
  serial_groups: [drats-with-config-manx]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: drats-with-config-manx/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-drats-with-config-manx
  serial: true
  serial_groups: [drats-with-config-manx]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: drats-with-config-manx/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/drats-with-config-manx/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: drats-with-config-manx/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true


- name: setup-infrastructure-maru
  serial: true
  serial_groups: [maru]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: maru/
      BBL_ENV_NAME: maru
      SKIP_LB_CREATION: true
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: clean-up-maru
  serial: true
  serial_groups: [maru]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: maru/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-maru
  serial: true
  serial_groups: [maru]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: maru/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-maru-lite
  serial: true
  serial_groups: [maru-lite]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: bosh-bootloader
    - get: backup-and-restore-ci
  - task: update-director-vm-size
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
        - name: bosh-bootloader
        - name: bosh-backup-and-restore-meta
      outputs:
        - name: bbl-updated-config
      run:
        path: bash
        args:
        - -c
        - |
          set -eu
          set -o pipefail

          cp -r bosh-bootloader/plan-patches/bosh-lite-gcp/. bbl-updated-config/config
          echo -e "---
          # Configure sizes for bosh-lite on gcp
          - type: replace
            path: /resource_pools/name=vms/cloud_properties/machine_type
            value: n1-standard-16
          " > bbl-updated-config/config/update-director-vm-size.yml

          APPEND="-o \${BBL_STATE_DIR}/update-director-vm-size.yml"
          FILE=bbl-updated-config/config/create-director-override.sh
          echo "$(cat $FILE) $APPEND" > $FILE

  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: maru-lite/
      BBL_ENV_NAME: maru-lite
      BBL_CONFIG_DIR: config/
      SKIP_LB_CREATION: true
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bbl-updated-config
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: clean-up-maru-lite
  serial: true
  serial_groups: [maru-lite]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: maru-lite/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-maru-lite
  serial: true
  serial_groups: [maru-lite]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: maru-lite/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: setup-infrastructure-gcs
  serial: true
  serial_groups: [gcs]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      << : *COMMON_BBL_UP_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/gcs/
      BBL_LB_CERT: ((gcs-lb-cert))
      BBL_LB_KEY: ((gcs-lb-key))
      LB_DOMAIN: bbr-gcs.platform-recovery.cf-app.com
      BBL_ENV_NAME: bbr-gcs
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/gcs/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/gcs/vars/terraform.tfstate
      TERRAFORM_ACTION: apply
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true

- name: clean-up-gcs
  serial: true
  serial_groups: [gcs]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: everyday
      trigger: true
  - task: bosh-clean-up
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: external-blobstore-directors/gcs/
      CLEAN_ALL: false
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta

- name: destroy-infrastructure-gcs
  serial: true
  serial_groups: [gcs]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: terraform-subdomain-record-set
    file: backup-and-restore-ci/tasks/terraform-subdomain-record-set/task.yml
    params:
      TERRAFORM_STATE: external-blobstore-directors/gcs/subdomain-terraform/subdomain-record-set.tfstate
      BBL_TERRAFORM_STATE: bosh-backup-and-restore-meta/external-blobstore-directors/gcs/vars/terraform.tfstate
      TERRAFORM_ACTION: destroy
      GCP_KEY: ((gcp_service_account_key))
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Backup & Restore Concourse"
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: bosh-backup-and-restore-meta
        rebase: true
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      << : *COMMON_BBL_PARAMS
      BBL_STATE_DIR: external-blobstore-directors/gcs/
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      bbl-config: bosh-backup-and-restore-meta
    ensure:
      put: bosh-backup-and-restore-meta
      params:
        repository: updated-bbl-state
        rebase: true

- name: deploy-docker-host
  serial_groups: [docker-host]
  plan:
  - get: docker-bosh-release
  - get: bosh-backup-and-restore-meta
  - put: docker-host-deployment
    params:
      manifest: bosh-backup-and-restore-meta/ci/setup-infrastructures/docker-host.yml
      releases: ["docker-bosh-release/release.tgz"]

- name: deploy-tracker-bot
  serial: true
  plan:
  - in_parallel:
    - get: relint-trackerbot
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - task: tracker-bot-config
    file: backup-and-restore-ci/tasks/tracker-bot-config/task.yml
  - put: bbr-tracker-bot
    params:
      path: relint-trackerbot-with-config
      manifest: bosh-backup-and-restore-meta/tracker-bot/manifest.yml
      environment_variables:
        TRACKER_API_TOKEN: ((tracker-api-token))

- name: renew-environments
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore-meta
    - get: every-tuesday
      trigger: true
    - get: every-sunday
      trigger: true
  - task: renew-environments
    tags: [platform-recovery-vsphere]
    file: bosh-backup-and-restore-meta/ci/setup-infrastructures/renew-env/task.yml
    params:
      PAS_ENVIRONMENTS: ((pas-environments-to-renew))
      PKS_ENVIRONMENTS: ((pks-environments-to-renew))
      TOOLSMITHS_TOKEN: ((toolsmiths-api-token))


- name: delete-unattached-disks
  plan:
  - in_parallel:
    - get: backup-and-restore-ci
    - get: every-sunday
      trigger: true
  - task: delete-unattached-disks
    file: backup-and-restore-ci/tasks/delete-unattached-disks/task.yml
    params:
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))

- name: setup-platform-recovery-zone
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore-meta
    - get: backup-and-restore-ci
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/backup-and-restore-sdk-acceptance-tests/gcp-zone/
      env_name: platform-recovery-zone
      vars:
        name: platform-recovery
        dns: platform-recovery.cf-app.com
        gcp_service_account_key: ((gcp_service_account_key))
    get_params:
      output_statefile: true
  - task: check-aws-dns-entry-points-to-gcp-zone
    file: backup-and-restore-ci/tasks/check-dns-resolves/task.yml
    params:
      ADDRESS: platform-recovery.cf-app.com

- name: destroy-platform-recovery-zone
  plan:
  - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/backup-and-restore-sdk-acceptance-tests/gcp-zone/
      env_name: platform-recovery-zone
      action: destroy
      vars:
        name: platform-recovery
        dns: platform-recovery.cf-app.com
        gcp_service_account_key: ((gcp_service_account_key))
    get_params:
      action: destroy

- name: setup-gcp-iam-role-bosh-director
  plan:
  - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/bosh-director-iam-role/gcp
      env_name: gcp-iam-role-bosh-director
      delete_on_failure: true
      vars:
        gcp_service_account_key: ((gcp_iam_role_manager_service_account_key))

- name: destroy-gcp-iam-role-bosh-director
  plan:
  - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/bosh-director-iam-role/gcp
      env_name: gcp-iam-role-bosh-director
      action: destroy
      vars:
        gcp_service_account_key: ((gcp_iam_role_manager_service_account_key))
    get_params:
      action: destroy

- name: setup-gcp-iam-role-bbl
  plan:
  - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/bbl-iam-role/gcp
      env_name: gcp-iam-role-bbl
      delete_on_failure: true
      vars:
        gcp_service_account_key: ((gcp_iam_role_manager_service_account_key))

- name: destroy-gcp-iam-role-bbl
  plan:
  - get: bosh-backup-and-restore-meta
  - put: terraform
    params:
      terraform_source: bosh-backup-and-restore-meta/terraform/bbl-iam-role/gcp
      env_name: gcp-iam-role-bbl
      action: destroy
      vars:
        gcp_service_account_key: ((gcp_iam_role_manager_service_account_key))
    get_params:
      action: destroy
